ACT200

Agile Project Delivery

.

.

.

PARTICIPANT HANDBOOK
INSTRUCTOR-LED TRAINING

Course Version: 23
Course Duration: 3 Day(s)
Material Number: 50164937

SAP Copyrights, Trademarks and 
Disclaimers

© 2024 SAP SE or an SAP affiliate company. All rights reserved.

No part of this publication may be reproduced or transmitted in any form or for any purpose without the 
express permission of SAP SE or an SAP affiliate company.

SAP and other SAP products and services mentioned herein as well as their respective logos are 
trademarks or registered trademarks of SAP SE (or an SAP affiliate company) in Germany and other 
countries. Please see https://www.sap.com/corporate/en/legal/copyright.html for additional 
trademark information and notices.

Some software products marketed by SAP SE and its distributors contain proprietary software 
components of other software vendors.

National product specifications may vary.

These materials may have been machine translated and may contain grammatical errors or 
inaccuracies.

These materials are provided by SAP SE or an SAP affiliate company for informational purposes only, 
without representation or warranty of any kind, and SAP SE or its affiliated companies shall not be liable 
for errors or omissions with respect to the materials. The only warranties for SAP SE or SAP affiliate 
company products and services are those that are set forth in the express warranty statements 
accompanying such products and services, if any. Nothing herein should be construed as constituting an 
additional warranty.

In particular, SAP SE or its affiliated companies have no obligation to pursue any course of business 
outlined in this document or any related presentation, or to develop or release any functionality 
mentioned therein. This document, or any related presentation, and SAP SE’s or its affiliated companies’ 
strategy and possible future developments, products, and/or platform directions and functionality are 
all subject to change and may be changed by SAP SE or its affiliated companies at any time for any 
reason without notice. The information in this document is not a commitment, promise, or legal 
obligation to deliver any material, code, or functionality. All forward-looking statements are subject to 
various risks and uncertainties that could cause actual results to differ materially from expectations. 
Readers are cautioned not to place undue reliance on these forward-looking statements, which speak 
only as of their dates, and they should not be relied upon in making purchasing decisions.

© Copyright. All rights reserved.

iii

Typographic Conventions

American English is the standard used in this handbook.

The following typographic conventions are also used.

This information is displayed in the instructor’s presentation

Demonstration

Procedure

Warning or Caution

Hint

Related or Additional Information

Facilitated Discussion

User interface control

Window title

Example text

Example text

iv

© Copyright. All rights reserved.

Contents

vii

1

2

21

25

37

40

45

51

52

65

68
79

82

87

93

95

103

125

127

129

132

137

143

144

157

160

165

168

183

187

197

199

Course Overview

Unit 1:

Discovering the Basics

Lesson: Describing Agile and Scrum 101

Exercise 1: Simulate Simple Scrum

Lesson: Discovering SAP Activate

Exercise 2: Accessing and Navigating through SAP Activate

Lesson: Identifying Agile Project Fit

Exercise 3: Case Study: Agile Project Fit

Unit 2:

Starting Agile

Lesson: Identifying the Roles and Responsibilities

Exercise 4: Case Study: Scrum Master and Project Manager

Lesson: Designing Agile Project Organization

Exercise 5: Case Study: Agile Project Organization

Lesson: Preparing the Agile Project

Exercise 6: Case Study: Create Scrum Teams

Unit 3:

Creating Backlog

Lesson: Explore Phase Overview

Lesson: Creating Product Backlog

Exercise 7: Case Study: User Story Map

Exercise 8: Case Study: Create User Stories

Exercise 9: Case Study: Rank User Stories and Define Releases

Lesson: Analyzing the Definitions of Ready and Done

Exercise 10: Case Study: Definition of Ready and Done

Unit 4:

Illustrating Iterative Build

Lesson: Analyzing Release Planning

Exercise 11: Case Study: Estimate User Stories

Lesson: Illustrating the Release Planning in a Scaled Environment

Exercise 12: Case Study: Release Planning with two Scrum 

Teams

Lesson: Designing Sprint Cycle

Exercise 13: Case Study: Daily Stand Up

Lesson: Analyzing Testing and Deploy

Unit 5:

Summarizing the Key Points

Lesson: Summarizing the Key Points

© Copyright. All rights reserved.

v

205

207

Unit 6:

Mentioning Supplementary Content

Lesson: Mentioning Supplementary Content

vi

© Copyright. All rights reserved.

Course Overview

TARGET AUDIENCE
This course is intended for the following audiences:

● Project Manager

● Change Manager

● Application Consultant

● Development Consultant

● Technology Consultant

● Business Analyst

● Business Process Architect

● Business Process Owner/Team Lead/Power User

● Enterprise Architect

● Solution Architect

© Copyright. All rights reserved.

vii

viii

© Copyright. All rights reserved.

UNIT 1 Discovering the Basics

Lesson 1

Describing Agile and Scrum 101

Exercise 1: Simulate Simple Scrum

Lesson 2

Discovering SAP Activate

Exercise 2: Accessing and Navigating through SAP Activate

Lesson 3

Identifying Agile Project Fit

Exercise 3: Case Study: Agile Project Fit

2

21

25

37

40

45

UNIT OBJECTIVES

●

Identify the goals and purpose of Agile

● Describe Agile and Scrum

● Discover how SAP projects are leveraging Agile practices in the different implementation 

project phases, for different implementation roadmaps

●

●

Illustrate how Agile is supported through SAP Activate methodology

Identify when Agile provides good fit to my projects

● Analyse how to position Agile in the proposal

●

Identify the benefits Agile provides to customer

© Copyright. All rights reserved.

1

Unit 1
Lesson 1

Describing Agile and Scrum 101

LESSON OBJECTIVES
After completing this lesson, you will be able to:

●

Identify the goals and purpose of Agile

● Describe Agile and Scrum

Story Map

Figure 1: Lesson 1: Agile and Scrum 101Lesson Objectives

Figure 2: Lessons Within Titles (Story Map)

2

© Copyright. All rights reserved.

Lesson: Describing Agile and Scrum 101

Figure 3: Notice

Understanding Scrum

Definition of Agile

Figure 4: Definition of Agile

Video: Defining Agile

For more information on Defining Agile, please view the video in the lesson 
Describing Agile and Scrum 101 in your online course.

Today everybody speaks about Agile in our fast-moving world. Traditional project 
management is still valid but not able to deal with all circumstances like the unknowns of fast-
changing requirements. Agile approaches are doing the best to deal with them, guiding the 
teams to make quicker and relevant decisions, probing the unknown, delivering business 
value iteratively and not just at the end. This enables project teams to adapt quickly according 
to their learning and changing environment.

© Copyright. All rights reserved.

3

Unit 1: Discovering the Basics

Figure 5: Definition of Agile from Merriam-Webster

Agile doesn't mean nor imply quicker, cheaper, or shorter than other options, but to be able to 
take the right decisions and to adapt based on your learning and the current needs. It's about 
constant learning in terms of what's needed and the way of working within the team. This 
leads to higher efficiency over time.

Figure 6: Lean Management and the History of Agility

Agility didn't just start in the 2000s when it became famous. The first signs of Agile methods 
in aviation can be found as early as 1943 in the Lockheed Advanced Development Programs, 
the mysterious Skunk Works, the development department for secret projects of the defense 
and technology company Lockheed. Within 180 days, the project team was supposed to 
develop a response to the Germans' overpowering Me-262. So Kelly Johnson 'stole' all the 
necessary personnel – technicians, engineers, pilots – and gathered them in a tent. They were 
able to fully concentrate on the development of their aircraft, the P-80, and used other Agile 
methods – even if they wouldn't have called it that at the time. They were actually able to 
reach their goal after just 143 days.

Nevertheless, the lean management and principles developed by Toyota in the fifties are 
fundamental for Agile approaches and, therefore, inherited. Toyota started out as a system to 
manage production efficiently avoiding interruptions. The philosophy is to produce time-
efficiently with the following factors considered: 

● Employees 

● Operating resources 

4

© Copyright. All rights reserved.

Lesson: Describing Agile and Scrum 101

● Costs 

● Planning and organization of all internal and external company activities

In the nineties Toyota finally started to bring Lean Management to other industries.

While the Lean Principles and the first formal Agile way of working found their way into 
software development with Extreme Programming (XP) and then Scrum in the eighties and 
nineties, the Agile Manifesto was created in 2001 in the Snow Bird Ski Resort in Utah when an 
alternative to documentation driven, heavyweight software development processes was 
agreed by a group of independent thinkers about software development. See more at https://
agilemanifesto.org/history.html.

As well in 2001, the Toyota Motor Corporation summed up their philosophy, principles, and 
values in an internal document they referred to as The Toyota Way 2001.

Figure 7: Lean Triad

The Lean Thinking began in Japan in the Toyoda Steamed Silk Looms optimizing their 
production to high efficiency. Toyoda then began to produce steam engines for the 
automobile industry. Thanks to the needs of trucks during the Second World War, Toyota 
entered the automobile industry. 

Toyota’s Lean Thinking became effective by following jidoka (identify the problem, stop the 
machine, find and eliminate the error, implement mitigation) and kaizen (continuous 
improvement). Both principles have been fully adapted by Agile methods.

This requires to follow the Lean Triad, avoiding anything unnecessary:

● Muda (Waste): In what area is the opportunity that you’re trying to create? Anything that 

doesn't help to achieve the wanted value is to be eliminated.

● Muri (Overburden): Too much – unreasonable load on people, processes, or machines. It 

slows you down, holding you back from the goals.

● Mura (Variability): Variability has a negative impact – quite often seen in varying sizes of 
requirements that make it difficult to understand or estimate. Workload needs to be 
balanced for continuous improvement and efficiency.

All three apply to people, processes, tools, and equipment (machinery). Any problem or issue 
could have elements of all three.

© Copyright. All rights reserved.

5

Unit 1: Discovering the Basics

Figure 8: What Are the Strengths of Agile?

With the Lean Principals in mind, Agile finally follows the PDCA principle for continuous 
improvement adaptation. 

We plan what we're supposed to deliver, execute the plan, checking the results or the 
outcome in terms of delivery as well in terms of way of working, and finally, identify 
improvement or change activities, if needed, including them in the next planning.

This approach deals with complexity and uncertainty, by 'slicing the elephant' into smaller 
pieces and learning from them, bringing light into the darkness, step by step. Dependencies 
are managed effectively as not all of them have to be satisfied at once and only the 
necessaries are tackled. Some might even become irrelevant. At the same time, we review 
how we worked together, improving interactions between people or working on required 
knowledge. 

Finally, this all leads to more transparency step by step.

Figure 9: The Reality of Software Development

Over the years, software development has been going through a huge maturity experience. 
We've seen a big change of paradigm. As stated in the figure, The Reality of Software 
Development, some dreams that we would like to be true are as follows:

● The customer knows what they want.

6

© Copyright. All rights reserved.

Lesson: Describing Agile and Scrum 101

● Developers know how to build it.

● Nothing will change along the way. 

But in fact we face the following reality:

● The customer discovers what they want as we go. 

● The developers discover how to build it as we go.

● Many things change along the way.

This is best summed up by the following quote from Henrik Kniberg: “In software 
development, an empirical approach generally yields better results than a prescriptive one. 
Our current approach can be improved.”

Figure 10: The Basics of Agile Methods

Any framework is only a framework as long the Agile principles aren't understood and used. 
Agility basically stands on the following six pillars:

●

Iterative and Incremental

Usually you're iterating through the same process or cycles (the name is depending on the 
framework) building the solution step by step. This means that every time a piece with a 
certain value is being delivered incrementally. Each delivery is a smaller piece of the big 
solution. When using cycles, they should be between one and four weeks long. At the 
beginning of each cycle, you need to figure out what are the most important things to do 
right now. At the end of the cycle, you'll demonstrate what was achieved and is working 
and will welcome feedback on it. By that full transparency is created.

● People-Centric

Teams are based on trust, which requires that each individual is building an understanding 
of each other and is able to count on them. Teams have to be self-organized. Team 
members know best how to deliver the planned items and shouldn't be commanded from 
outside. Otherwise, creativity is undermined and individuals get demotivated.

● Focus

The team focuses on one thing at a time until it's done, trying to avoid work parallelization 
as much as possible. Each change from one topic to another is taking effort, losing 

© Copyright. All rights reserved.

7

Unit 1: Discovering the Basics

concentration, increasing the cognitive load (up to 20% loss). Nevertheless, as there 
might be waiting times for further input from other teams or the customer, there are items 
being worked on in parallel. This needs to be kept to an absolute minimum. If the wait time 
is too long, the reason needs to be identified and mitigated.

Defer the requirements definition until just before you build them – just in time (JIT).

● Cross-Functional Teams

Dependencies are increasing the complexity, not only technically, but between teams in 
terms of communication and collaboration. Each team should be as independent as 
possible in their work. Therefore, cross-functional teams are needed, having all the 
knowledge and expertise they need to deliver their piece of work. This becomes more 
crucial the bigger the project is and the more requirements have to be scaled. Create 
cross-functional teams that include both business and technical people.

● Learning

Continuous improvement requires continuous learning. Making mistakes is something 
good and encouraged as long as you learn from them, knowing the next time how to do it 
better and trying to avoid doing the same mistake again. This leads to efficiency and also 
to transparency in terms of uncovering the unknown. In the best case, you find out what 
you do not need, which leads you to finding out what you need or how. Therefore, better 
fail early to learn fast. The earlier you learn, the higher the chances are to be better and 
faster over the time of the project. If you just fail late, it might have an impact on many 
things you already worked on.

● Adaptive Planning

As you learned, you don't always know exactly what is needed and requirements might 
change due to knowledge, market, or law changes. In a complex environment, you usually 
follow a moving target. Embrace this as something positive, as this leads you to what is 
really needed and not simply thought as needed. Promote adaptive planning and a people-
centric approach.

Figure 11: Analogy Comparing Waterfall and Agile Approach

To help understand the benefit of using an Agile approach, consider the following analogy: 

The traditional waterfall (WF) approach can be likened to shooting a goal. You can plan as 
much as possible, but it isn’t clear you hit the goal with that one shot you have as many 
factors can disturb it. (Goal Keeper, wind, bad hit of the ball, another player, and so on.)

8

© Copyright. All rights reserved.

Lesson: Describing Agile and Scrum 101

Agile is more like driving a car. You have a destination in mind, but you constantly react to 
obstacles and can adjust your route or even change your destination as your goal might not 
even be the destination but a certain value (for example, having a great dinner).

Bear in mind that changing the destination (or, in a project, the deliverable) may entail 
additional workload. This change must be formally agreed upon – and actually chosen and 
requested – by the customer. Therefore, it’s worth remembering that neither an Agile nor a 
Waterfall approach is the solution for everything.

The trajectory of the ball, once it's launched, can't be changed – it scores or it’s missing. One 
possible trajectory.

In Agile, we can have multiple trajectories that are leading to the target or the target can 
change since the moment we started on the trajectory.

Figure 12: Waterfall Versus Agile – What Are the Differences?

To better understand the difference between the Waterfall and Agile approaches, we'll take 
Scrum, which is the basis for SAP Activate.

Waterfall follows five consecutive phases: planning and analyzing the needs, designing the 
solution, building it, testing, and, finally, deploying it.

Within Scrum, we do follow the same phases but within smaller cycles, again and again. Only 
the first cycle might not deliver something, as it often is seen as a preparation cycle. 

As the slide shows, the Agile Scrum approach is simply cutting a Waterfall approach into 
smaller chunks, allowing adaptation and replanning. Some call this an iterative Waterfall, 
which is right as long you don’t follow the Agile principles.

© Copyright. All rights reserved.

9

Unit 1: Discovering the Basics

Figure 13: Agile Manifesto – Four Paradigms

The Agile Manifesto came about as the result of a meeting in February 2001 that brought 
together several software and methodology experts, who then defined the Agile Manifesto 
and Agile Principles. The left side is valued more than the right side, but still, the right side is 
important and necessary. If we start to focus more on the left side of the four paradigms, we 
start to concentrate more on value delivery, adapting our efforts, in an Agile way, to what is 
really needed, with a lean management approach.

The Agile Manifesto reads as follows:

●

Individuals and Interactions over Processes and Tools

● Working Software over Comprehensive Documentation

● Customer Collaboration over Contract Negotiation

● Responding to Change over Following a Plan

For the principles behind the Agile Manifesto, see Unit 6. 

Figure 14: People And Knowledge: Agile Manifesto – Twelve Principles

Those 12 principles, mainly coming from software development, underline the four previous 
paradigms and can be reused in any Agile project, regardless of whether they're software 
development or another type of project.

10

© Copyright. All rights reserved.

Lesson: Describing Agile and Scrum 101

Figure 15: The Agile Mindset

As mentioned a couple of times already, Agility doesn't only consist of frameworks and tools 
but, more importantly, of principles, paradigms, and values. Only when these are combined 
and practised form the so-called Agile Mindset.

Figure 16: SCRUM – In a Nutshell

Scrum is an implementation of the Agile mindset, one framework out of many. It's a 
lightweight process framework for Agile development, and the most widely used one.

A process framework is a set of practices that must be followed for a process to be consistent 
with the framework. 

Lightweight means that the overhead of the process is kept as small as possible to maximize 
the amount of productive time available for getting useful work done. 

The Scrum process is distinguished from other Agile processes by specific concepts and 
practices, which are divided into the three categories of Roles, Artifacts, and Time Boxes. 

© Copyright. All rights reserved.

11

Unit 1: Discovering the Basics

These and other terms used in Scrum are defined in this section in further details. Scrum is 
most often used to manage complex software and product development using iterative and 
incremental practices. Scrum significantly increases productivity and reduces time to 
benefits relative to classic Waterfall processes. Scrum enables organizations to adjust 
smoothly to rapidly changing requirements, and produce a product that meets evolving 
business goals.

An Agile Scrum process benefits the organization by helping it to do the following:

●

Increase the quality of the deliverables

● Cope better with change (and anticipate the changes)

● Provide better estimates while spending less time creating them

● Be more in control of the project schedule and state

● Continuous improvement of work and way of working

●

Scrum follows an empirical approach by introducing certain key performance indicators 
(KPIs) the teams are using to improve their way of working on one hand and by providing 
more transparency over progress and the work done or still to be done. Furthermore, it does 
introduce self-organized teams, spreading responsibilities on different shoulders for intensive 
and efficient communication and collaboration instead of centralizing them.

Figure 17: The Origins of Scrum

The origin of Scrum terminology comes from the game of rugby.

The scrum is a means of restarting the game after a stoppage that has been caused by a 
minor infringement of the laws (for example, a forward pass or knock-on) or the ball 
becoming unplayable in a ruck or maul. The scrum serves to concentrate all the forwards and 
the scrum-halves in one place on the field, providing the opportunity for the backs to mount 
an attack using the space created elsewhere.

When Jeff Sutherland cocreated the Scrum process in 1993, he borrowed the term scrum 
from an analogy put forth in a 1986 paper by Takeuchi and Nonaka, published in the Harvard 
Business Review. In that paper, the authors compare high-performing, cross-functional 
product development teams to rugby teams using the scrum formation when they restart 
play. 

12

© Copyright. All rights reserved.

Lesson: Describing Agile and Scrum 101

You can see some of today’s characteristics of a scrum on a project and relate it to the sport 
or just think about it in our projects. 

Scrum Values We Want to Focus On

Figure 18: Scrum Values We Want to Focus On

Video: Summarizing the Scrum Values

For more information on Summarizing the Scrum Values , please view the video 
in the lesson Describing Agile and Scrum 101 in your online course.

All work performed in Scrum needs a firm foundation of values for the team's process and 
principles. With its emphasis on teamwork and continuous improvement, Scrum both creates 
those values and relies on them. From the team's perspective, the values are: 

● Commitment: Because we have great control over our own destiny, we become more 

committed to success. 

● Focus: Because we focus on only a few things at a time, we work well together and produce 

excellent work. We deliver valuable items sooner. 

● Openness: As we work together, we practice expressing how we're doing and what's in our 

way. We learn that it's good to express concerns so that they can be addressed.

● Respect: As we work together, sharing successes and failures, we come to respect each 

other and to help each other become worthy of respect. 

● Courage: Because we're not alone, we feel supported and have more resources at our 

disposal. This gives us the courage to undertake greater challenges. 

© Copyright. All rights reserved.

13

Unit 1: Discovering the Basics

Figure 19: SCRUM Roles - Overview

The Scrum team consists of a Product Owner, Development (Implementation) Team, and a 
Scrum Master. Around them, in our SAP projects, we also have a Project Manager and 
Stakeholder. Those roles are further explained in a later chapter.

Product Owner

● Defines the features of the product. Decides on release date and content.

● Prioritizes features according to market value.

● Can change features and priority at every iteration.

● Accepts or rejects work results.

Scrum Master

● Ensures that the team is fully functional and productive.

● Enables close cooperation across all roles and functions and removes barriers.

● Shields the team from external interferences.

● Ensures that the process is followed. 

●

Invites team members to daily stand-up meetings, iteration review, and planning meetings.

● Moderates the Scrum team events

Team

● Cross-functional, seven plus/minus two members.

● Selects the iteration goal and specifies work results.

● Organizes itself and its work.

● Has the right to do everything (within project guidelines boundaries) to reach the iteration 

goal.

● Demonstrates work results to the Product Owner

Project Manager

14

© Copyright. All rights reserved.

Lesson: Describing Agile and Scrum 101

● Project Planning

● Resource Planning

● Monitoring time and Budget

● Stakeholder Management

● Risk Management

● Overall Project Responsibility

Stakeholder

Represents business user or anybody else with an interest in the project

Figure 20: Sprint Events in SAP Scrum Approach

Scrum introduces these events that are supposed to be the only needed events. Besides 
them, the teams have various technical syncs on demand, but no further planning events are 
needed. There might be some more events required for interteam communication when 
scaling.

The details can be found in the figure and will be discussed in later chapters.

© Copyright. All rights reserved.

15

Unit 1: Discovering the Basics

Figure 21: Scrum: Product Backlog

The Agile Product Backlog in Scrum is a prioritized features list containing short descriptions 
of all functionalities desired in the product. Typically, a Scrum team and its Product Owner 
begin by writing down everything they can think of for Agile backlog prioritization.

In the simplest definition, the Scrum Product Backlog is a list of all things that need to be done 
within the project. It replaces the traditional requirements specification artifacts. These items 
can have a technical nature or can be user-centric, for example, in the form of user stories. 
The Backlog will be prioritized and rated, defining the sequence. Based on the learning during 
the project, some items might not be required anymore and be removed. New items might 
also appear.

We also have the Sprint Backlog. The Sprint Backlog is a list of tasks identified by the Scrum 
team to be completed during the Scrum Sprint. During the Sprint planning meeting, the team 
selects some Product Backlog items, usually in the form of user stories, and identifies the 
tasks necessary to complete each User Story.

Figure 22: Scrum Board – Making Work Visible

16

© Copyright. All rights reserved.

Lesson: Describing Agile and Scrum 101

A Scrum Board is a tool that helps teams make Sprint Backlog items visible. The board can 
take many physical and virtual forms, but it performs the same function regardless of how it 
looks. The board is updated by the team, ideally, in real-time, and shows all items that need to 
be completed for the current Sprint.

It visually displays current project work, specifically work that has been taken into the current 
Sprint. At a high level, it shows what hasn't been started, what is currently being worked on, 
and what has been completed, all Sprint based. 

It mainly benefits individuals who are actively working on the project, such as the 
development team, but also those who aren't, such as stakeholders. Nevertheless, the Scrum 
Board belongs to the Development Team and is only allowed to be maintained by them. 

Scrum Boards can either be physical or virtual, but they must be accessible and display 
project work. Physical boards often use a white board, wall, or magnetic board. The project 
work is written on index cards, sticky notes, or magnets. Virtual boards use software designed 
to look like the physical boards, but they're viewed and changed electronically. These are best 
for remote teams that aren't located in the same place. Today we usually have virtual boards 
from software such as Jira or Solution Manager. Cloud ALM also offers such a view.

Scrum Board Layout

Scrum Boards are highly customizable. Your team should feel empowered to experiment with 
the layout in the spirit of adaptation. See what works well and adjust if necessary; inspect and 
adapt as needed.

For a Scrum team, a typical Scrum Board has columns and rows. Each row represents a User 
Story or other itemization/chunking of work if you don't use user stories. Developers on the 
team may start with these columns on a Scrum Board:

● Sprint Backlog

● Doing

● Needs Review or Needs Testing

● Done

●

Impeded

Some teams may use colorful sticky notes representing each backlog item or user story. The 
developers move the items from Doing to Done as the group progresses. They can also add 
extra columns like Blocked or Impeded for any obstacles.

Note:
The Scrum Board is often called the Sprint Board too.

© Copyright. All rights reserved.

17

Unit 1: Discovering the Basics

Figure 23: Scrum: Release Burndown Chart – Tracking Progress

Progress on a Scrum project can be tracked using a Release Burndown Chart. The Scrum 
Master should update the release Burndown Chart at the end of each Sprint if it's note done 
automatically by the tool.

Otherwise, most Agile Project Management tools such as Jira or VersionOne produce the 
burndowns for both Sprint and Release based on the updates on the Scrum Board.

The horizontal axis of the Sprint Burndown Chart shows the Sprints and the vertical axis 
shows the amount of work remaining at the start of each Sprint.

A Burndown Chart is a graphical representation of work left to do versus time. 

The remaining work (or Backlog of the Sprint) is often on the vertical axis, with time along the 
horizontal. This isn't only useful to see actual performance but also for predicting when all of 
the work will be completed.

The Burndown Chart should consist of the following:

● X axis to display working days

● Y axis to display remaining effort (Story Points or Person Days, elaborated later)

●

Ideal effort as a guideline

● Real progress of effort

Note:
DO NOT use it for micromanagement, as teams are asked to deliver, not to track 
time.

Teams usually first have to find their rhythm, understanding how much they can achieve in a 
Sprint and how to rate/estimate Sprint items. Usually after 3–6 Sprints they have a good 
understanding based on the learning of their Burndown Chart, making their planning more 
reliable.

The Burndown Chart is also used by the Scrum Master to better understand the performance 
of a team, discussing improvements to reach their plan and commitment.

18

© Copyright. All rights reserved.

Lesson: Describing Agile and Scrum 101

Figure 24: Day-to-Day Flow in SCRUM Project

In summary, there are various tools and techniques used in the day-to-day flow of an Agile 
project. 

Teams use the Product Backlog. This can be a simple spreadsheet (for example, using the 
Product Backlog template accelerator in the methodology), or it can be a more sophisticated 
backlog management tool, such as VersionOne or Jira, Cloud ALM (or still SAP Solution 
Manager Focused Build).

The results of the Sprint planning are brought on to the Scrum Board. The team uses the 
Scrum Board as a visible tracking mechanism and displays the Sprint progress and any 
blockers.

The team conducts a daily meeting. These dailies are meant to be a synchronization between 
team members about progress and help needed. 

The Burndown Chart helps to understand progress and issues versus their plan and 
estimates.

© Copyright. All rights reserved.

19

Unit 1: Discovering the Basics

20

© Copyright. All rights reserved.

Unit 1
Exercise 1

Simulate Simple Scrum

● Your team will produce paper airplanes for a school party.

● The airplanes:

- Need to be made from ¼ of A4 / letter size paper.

- Cannot have a sharp tip to avoid injury.

- Need to be able to fly at least three meters.

● The build will be conducted in several time-boxed Sprints.

● Your objective is to produce maximum number of planes that meet the specifications (only 

planes that pass the test will count).

● Your team will collaborate on the plane building.

1. The build will be conducted as a Scrum project.

2. In each iteration, the team will have one minute for planning; two minutes to build before 

the planes are presented to the Product Owner (your instructor) for testing (two minutes).

3. Each team member can do only one fold of the airplane before passing it to the next 

member.

4. Each plane can be tested only once. If it fails, it must be discarded.

5. The team cannot prestock building material.

6. Work in progress – for example, partially built airplanes and building material, must be 

discarded after each Sprint.

7. Scrum Master will capture planned versus delivered airplanes in each Sprint.

8. Teams are responsible for self organization and decisions on how to split the work, roles, 

and so on.

9. Result (planned versus delivered)

© Copyright. All rights reserved.

21

Unit 1
Solution 1

Simulate Simple Scrum

● Your team will produce paper airplanes for a school party.

● The airplanes:

- Need to be made from ¼ of A4 / letter size paper.

- Cannot have a sharp tip to avoid injury.

- Need to be able to fly at least three meters.

● The build will be conducted in several time-boxed Sprints.

● Your objective is to produce maximum number of planes that meet the specifications (only 

planes that pass the test will count).

● Your team will collaborate on the plane building.

1. The build will be conducted as a Scrum project.

2. In each iteration, the team will have one minute for planning; two minutes to build before 

the planes are presented to the Product Owner (your instructor) for testing (two minutes).

3. Each team member can do only one fold of the airplane before passing it to the next 

member.

4. Each plane can be tested only once. If it fails, it must be discarded.

5. The team cannot prestock building material.

6. Work in progress – for example, partially built airplanes and building material, must be 

discarded after each Sprint.

7. Scrum Master will capture planned versus delivered airplanes in each Sprint.

8. Teams are responsible for self organization and decisions on how to split the work, roles, 

and so on.

9. Result (planned versus delivered)

a) Team

Sprint 1–
Plan

Sprint 1–
Actual

Sprint 2–
Plan

Sprint 2–
Actual

Sprint 3–
Plan

Sprint 3–
Actual

A

B

C

D

E

22

© Copyright. All rights reserved.

Lesson: Describing Agile and Scrum 101

Team

Sprint 1–
Plan

Sprint 1–
Actual

Sprint 2–
Plan

Sprint 2–
Actual

Sprint 3–
Plan

Sprint 3–
Actual

F

G

H

I

© Copyright. All rights reserved.

23

Unit 1: Discovering the Basics

LESSON SUMMARY
You should now be able to:

●

Identify the goals and purpose of Agile

● Describe Agile and Scrum

24

© Copyright. All rights reserved.

Unit 1
Lesson 2

Discovering SAP Activate

LESSON OBJECTIVES
After completing this lesson, you will be able to:

● Discover how SAP projects are leveraging Agile practices in the different implementation 

project phases, for different implementation roadmaps

●

Illustrate how Agile is supported through SAP Activate methodology

Story Map

Figure 25: Lessons Within Titles (Story Map)

© Copyright. All rights reserved.

25

Unit 1: Discovering the Basics

Figure 26: Introduction to SAP Activate

Introduction to SAP Activate

Figure 27: Agile SAP Project Delivery Is About ...

SAP Activate Agile methodology is placing customer value delivery as one of the key metrics 
of success.

Involving the customer at all stages of the project and adhering to an Agile approach results in 
improved quality, better alignment with requirements, and greater ease of solution 
acceptance for users.

Transparency on progress, impediments, and on all the key aspects of the project is one of 
the forefront values of Agile methodologies that's allowing better risk management and better 
response to unexpected situations.

The close collaboration with our customers to build solutions that will help their businesses 
thrive is fostering a trustful and long-term relationship with our customers.

SAP Activate is the SAP Solution Adoption framework for accelerated time-to-value 
implementation projects, using the SAP Best Practices and SAP standards.

The usage of SAP Standard functionalities helps the jump-start of the implementation with 
ready-to-run processes and other assets.

26

© Copyright. All rights reserved.

Lesson: Discovering SAP Activate

By using the predelivered and ready-to-run content along with documentation and supporting 
tools, the SAP Activate framework generates a significant reduction in project time, reducing 
the Total Cost of Implementation (TCI).

Later on, when the solution is operational, the adoption of the SAP standards will decrease 
the Total Cost of Ownership (TCO).

Thanks to the Agile-innate project features, the delivered solution has the full potential to 
make our customers happy, the right grounds for effective risk management are set, and, in 
the end, the implementation project can be seen as more cost-efficient.

In conclusion, the Agile approach DOES NOT mean cheaper or faster, although both can be 
welcome by-products. An example of a by-product is naphtha from petroleum processing.

Customer's Expectations for Their Engagement Models 

Figure 28: Customer's Expectations for Their Engagement Models 

Video: Summarizing the Customer's Expectations for their Engagement Models

For more information on Summarizing the Customer's Expectations for their 
Engagement Models, please view the video in the lesson Discovering SAP 
Activate in your online course.

The actual business environment is characterized by change, uncertainty, complexity, and 
ambiguity, and that's why the needs of customers have evolved towards more flexible 
engagement models with their software providers. These new engagement models must 
allow:

● Faster deployment and integration

● More frequent innovation updates and upgrades

● Faster adoption of the new versions

The answer for these demands is an Agile approach that starts with a fast rollout of a very 
simple solution (minimum viable product) with limited initial solution and deployment fees.

The Agile approach aims to deliver improved versions after short cycles (several weeks) to 
allow fast customer feedback and an easy adoption of the new functionalities, with less 
training and in less time.

© Copyright. All rights reserved.

27

Unit 1: Discovering the Basics

Figure 29: SAP ACTIVATE Methodology Accelerates Your Journey to SAP S/4HANA with These Principles

The SAP Activate methodology is giving guidelines to quick-start the implementation by using 
the Best Practices and SAP standard functionalities resulted from over 40 years of customer 
implementation experience.

The Fit-to-Standard approach part of the SAP Activate methodology is used to confirm the 
solution fit and to identify delta requirements for the customers.

SAP Activate methodology gives full support for initial deployment and continuous business 
innovation with a harmonized implementation approach for cloud, on-premise, and hybrid 
deployments.

SAP Activate methodology, the successor of Accelerated SAP (ASAP) and SAP Launch, is 
modular and scalable, and it can be adapted to the customer needs and Agile maturity level, 
no matter the size and project complexity. 

After each project phase, SAP Activate Methodology documents formal Quality Gates that are 
checking that relevant deliverables for the phase are available before moving to the next 
project phase.

By integrating the Agile practices, the SAP Activate methodology benefits from the Agile 
quality built-in principles that incorporate solution review, testing, and acceptance from the 
early stages of the solution implementation project.

SAP Activate methodology started with SAP S/4HANA and is now supporting a broad 
coverage of SAP solutions. The methodology also enables co-innovation with customers and 
is accessible for partners.

28

© Copyright. All rights reserved.

Lesson: Discovering SAP Activate

Figure 30: Key Elements Driving Successful Deployment – Working Together to Simplify, Streamline, and 

Automate Deployment

Besides the prescriptive and step-by-step deployment guidance for project teams part of SAP 
Activate Methodology, it brings together the SAP Best Practices and the tools needed to 
implement and deploy SAP solutions.

The SAP Best Practices contain rich business scenarios and business content, helping 
customers to get predictable and repeatable results.

SAP Best Practices are easily integrated with other cloud solutions, such as SAP 
SuccessFactors and the Ariba Network.

These ready-to-run business processes – comprehensive, flexible, and optimized for SAP S/
4HANA – are cultivated from the collective implementation knowledge of thousands of SAP 
customers.

SAP Best Practices also cover integration and migration fundamentals, designed to guide you 
through an optimal migration process, whether you're moving from a legacy SAP system or a 
non-SAP database.

SAP Activate gives you a reference solution with sample data included in the product, clear 
guidelines, and step-by-step directions on how to move from your current landscape, SAP or 
non-SAP, to reach your goal.

SAP Activate gives guidance on tools for configuration, testing, deployment, and solution 
operations, plus a side-car tool to support the solution documentation and to track the 
implementation project status.

Traditionally, SAP Solution Manager has been used as an application lifecycle management 
(ALM) tool, and, with the advent of cloud-based solutions, SAP Cloud ALM has become more 
common. For SAP S/4HANA Cloud edition, it's recommended to use SAP Cloud ALM.

SAP Cloud ALM supports customers to implement and operate their cloud or hybrid solutions 
by offering content-driven guided implementation and highly automated operations.

SAP Cloud ALM supports the complete application lifecycle from design, build, test, and 
deploy. Even monitoring capabilities and applications supporting the operation of SAP 
solutions are included.

The provided functionalities are all built-in, preconfigured, and ready-to-use.

Other characteristics of SAP Cloud ALM:

© Copyright. All rights reserved.

29

Unit 1: Discovering the Basics

● New capabilities are added constantly and delivered biweekly to the customer tenants.

●

●

●

●

It's included in the cloud subscription containing Enterprise Support, cloud edition and in 
SAP Enterprise Support.

It's cloud native and open.

It manages the application lifecycle for the Intelligent Suite.

It manages cloud but also hybrid (combination of on-premise and cloud) solutions.

● Can be provisioned and consumed immediately.

●

Is an application running on SAP Business Technology Platform and is optimized for SAP 
HANA.

Figure 31: Deploy with SAP Activate – Journey Overview and Key Milestones

During the Discover phase, the business scope, the value, and the benefits are identified as 
well as the adoption strategy and road map.

With the use of benchmark data, the typical TCO costs can be calculated and used for the 
business case that will support the implementation project.

It's recommended that the Customer create a Center of Expertise (COE) for Organizational 
Readiness to ensure the organizational change management for the solution adoption.

The objective of the COE will be to identify the capabilities needed from IT and business and to 
extract the highest possible business outcomes from the use of SAP S/4HANA Cloud. The 
speed of transition to the new model depends largely on the maturity of this Customer COE. 
The journey for the Customer COE organizational readiness begins with the Discover phase to 
ensure a successful and business valuable implementation of SAP S/4HANA Cloud. The COE 
provides the catalyst for innovation and digitalization after go-live.

The Prepare phase marks the start of the SAP S/4HANA implementation project. Project 
plans are finalized, project teams onboarded and enabled, and the customer is given access 
to their Starter System with SAP S/4HANA Cloud Best Practices, Central Business 
Configuration (CBC) and Cloud Application Lifecycle system (SAP Cloud ALM). Concepts for 
solution adoption are developed by the team set up for organizational change management.

30

© Copyright. All rights reserved.

Lesson: Discovering SAP Activate

The Explore phase focuses on driving adoption of SAP S/4HANA Cloud through a Fit-to-
Standard approach that has an objective to create the backlog for the Realize phase.

During the Realize phase, the teams run in Agile Sprints to configure the solution and create 
custom extensions in SAP S/4HANA Cloud or SAP Business Technology Platform (BTP). The 
solution's tests are run in an integrated environment, data is loaded, and business users' 
enablement is performed.

The Deploy phase covers the set up production system, confirms business readiness, and 
switches business operations to the new system. For a Customer COE, SAP 
recommends preparing key users for training the user community and for supporting 
business operation after go-live.

During the Run phase, Customers drive effective adoption of the new solution across the 
business, meet evolving business needs, adopt periodic innovations, monitor, and optimize 
processes and their integration, and manage custom extensions. 

Figure 32: Deploy SAP S/4HANA On-Premise with SAP Activate – Journey Overview and Key Milestones

SAP Cloud ALM applies for public and private cloud architectures. For on-prem 
implementation, SAP Solution Manager is recommended.

In the Discover phase, customers become familiar with the benefits of SAP HANA and SAP S/
4HANA and the benefits they can bring to the business.

An overall company strategy on their digital transformation, which includes SAP S/4HANA as 
the digital core, should be created.

Customers can use a trial system in the cloud to become familiar with the value of SAP S/
4HANA in general (for example, the new and simplified functionalities in SAP S/4HANA, the 
new User Interface based on FIORI, Agile customer innovations using SAP Business 
Technology Platform, and so on).

A decision on the implementation scenario and a comprehensive implementation strategy for 
SAP S/4HANA should be made in the Discover phase. In the case of system conversion, the 
conversion readiness of the existing SAP ERP system should be checked as well. The 
outcome of these activities can be used within the company to build a business case for an 
SAP S/4HANA implementation project.

© Copyright. All rights reserved.

31

Unit 1: Discovering the Basics

Once the business case has been approved, the project is initiated in the Prepare Phase that 
covers the initial planning and preparation for the project. In this phase the project is started, 
plans are finalized, the project team is assigned, and work is under way to start the project 
optimally.

During Explore, a Fit-to-Standard gap analysis is executed to validate the solution 
functionality included in the project scope and to confirm that the business requirements can 
be satisfied. Identified gaps and configuration values are added to the backlog for use in the 
next phase.

The Realize phase uses a series of iterations to incrementally build and test an integrated 
business and system environment that is based on the business scenarios and process 
requirements identified in the previous phase.

During Realize, data is loaded, adoption activities occur, and operations are planned.

The objectives of the Deploy phase are the setup of the production system, the confirmation 
of the customer organization readiness, and the switch of business operations to the new 
system.

In the Run phase, the aim is to establish a safe and efficient operation of the newly created 
solution. This includes the operations platform, core IT support processes, the setup and fine-
tuning of new and additional operations tools, and the enablement of the operational support 
team. Moreover, a continuous operations improvement should be established to improve IT 
operations based on newly gained experience.

In addition, this is the right time to plan for further innovations, which could be implemented 
according to the overall implementation strategy that has been created in the Discover phase 
of the project (or separately, as part of a business transformation work stream). The 
implementation strategy can now be reviewed and enriched based on system usage 
experience, which has been gained in the first weeks after go-live.

Figure 33: SAP Activate Methodology – The Advantages | Accelerating Delivery of Outcomes

There are three major acceleration techniques for SAP solution implementations of SAP 
Activate that will help SAP's customers:

● The use of SAP Best Practices brings speed and efficiency to the project start. The 

customer starts with a preconfigured system with preinstalled organizational structure, 
master data ready to demo, and documented with process models.

● Fit-to-standard approach speeds up the Explore phase, compared to the traditional 
Business Blueprint, specifically if it's a close fit and the customer is willing to adopt 
standard processes from SAP. A Product Backlog is created to store the prioritized list of 

32

© Copyright. All rights reserved.

Lesson: Discovering SAP Activate

requirements. The high prioritized requirements are going into a high-level design phase 
that is time boxed and provides refined requirements to be implemented in the first couple 
of Sprints in the Realize phase. Fit-to-standard and Design workshops are done in an 
iterative approach that already benefits from the Agile practices of inspecting and 
adapting.

● The Agile build relies on short iteration cycles called Sprints to build the solution per the 

customer expectations (expressed as User Stories in the Product Backlog).

During the Agile build, the customer drives the priorities and acceptance to achieve by using 
Agile concepts:

● Product ownership – to maximize the value delivery.

● Sprint Review – to validate the solution.

● Definition of Done – to cover the expectations related to documentation, testing, user 

enablement, and so on.

Figure 34: SAP Agile Project Example

In opposition with the traditional projects where we had full functionality rollouts and long 
implementation projects, the SAP Activate Methodology recommends starting with a small 
scope and a much shorter implementation project for the first Release.

This approach allows Customers to test their assessments in terms of business value delivery 
and solution fitness. It also implies lower solution adoption efforts for the customer 
organization and fewer initial costs.

Subsequent, incremental Releases will add functionalities and will benefit from the feedback 
that the business is giving on the capabilities of the first Release.

© Copyright. All rights reserved.

33

Unit 1: Discovering the Basics

Figure 35: Enablers for Your Digital Transformation – SAP Activate Tools and Community

There are three key elements that support the digital transformation with SAP Activate:

● SAP Activate Community (https://community.sap.com/topics/activate)

● SAP Activate Roadmap Viewer (https://go.support.sap.com/roadmapviewer/#)

● The SAP Signavio Process Navigator (https://me.sap.com/processnavigator/HomePage)

The SAP Activate Community site has ready to consume content, references, expert topics, 
blogs covering various topics within SAP Activate, and a Q&A forum. It gives a high-level 
learning overview at a glance.

The SAP Activate Roadmap Viewer allows customers and partners to view SAP solution 
roadmaps online. It's a tool that gives access to a full work breakdown structure of a particular 
project type and provides a wealth of projects accelerators to leverage. The content is 
available in an online SAP Fiori based environment.

The SAP Signavio Process Navigator replaces the Best Practices Explorer tool and provides 
package content specific to the scope of your solution.

It includes all business process scope in documentation format for all business processes 
inside the application. It's integrating the country/region-specific content to manage multiple 
geographies, divisions, subsidiaries, and ledgers.

The following information can be found in SAP Signavio Process Navigator:

● Scope item fact sheets: A description of the business process including business benefits 

and key process steps covered.

● Process flow: A representation of the standard business process to show how the software 

works by default.

● Process flow (BPMN2): A downloadable version of the business process flow that can be 
edited in process modeling applications if the standard process flow is customized. It's 
important to document any process that no longer follows the standard process.

● Test scripts: A procedure for testing the standard Best Practice processes in the system.

34

© Copyright. All rights reserved.

● Setup instructions: A guide with instructions to set up the prerequisite requirements 

(usually integration) before the test script can be completed.

Lesson: Discovering SAP Activate

Figure 36: Workstreams, Deliverables, Tasks, and Accelerators

SAP Activate Roadmap Viewer is a tool that gives access to a full work breakdown structure of 
a particular project type. The content is available in an online SAP Fiori based environment.

It's hosted or managed within SAP HANA Cloud. It shows the SAP Activate roadmaps for SAP 
S/4HANA and the SAP Activate roadmaps for other solutions. We call them general work 
breakdown structures (WBSs), which are applied to different on-premise solutions or cloud 
solutions.

The hierarchy that we see in this environment is the standard core WBS hierarchy of:

● Phase

● Deliverable

● Tasks

● Accelerators

An additional view by workstream is also available.

© Copyright. All rights reserved.

35

Unit 1: Discovering the Basics

36

© Copyright. All rights reserved.

Unit 1
Exercise 2

Accessing and Navigating through SAP 
Activate

1. Access the SAP Activate Roadmap Viewer where you can locate SAP methodology 

Roadmaps.

https://go.support.sap.com/roadmapviewer/

2. Navigate to the General methodology roadmaps, and look at the SAP Activate 

Methodology for RISE with SAP S/4HANA Cloud, private edition.

3. Follow a phase or workstream to locate some agile deliverables and capture their 

locations and titles.

4. Locate 2–3 agile accelerators, and capture their location and name/title.

5. Which ones do you consider added most value to your project and why?

© Copyright. All rights reserved.

37

Unit 1
Solution 2

Accessing and Navigating through SAP 
Activate

1. Access the SAP Activate Roadmap Viewer where you can locate SAP methodology 

Roadmaps.

https://go.support.sap.com/roadmapviewer/

2. Navigate to the General methodology roadmaps, and look at the SAP Activate 

Methodology for RISE with SAP S/4HANA Cloud, private edition.

3. Follow a phase or workstream to locate some agile deliverables and capture their 

locations and titles.

4. Locate 2–3 agile accelerators, and capture their location and name/title.

5. Which ones do you consider added most value to your project and why?

38

© Copyright. All rights reserved.

Lesson: Discovering SAP Activate

LESSON SUMMARY
You should now be able to:

● Discover how SAP projects are leveraging Agile practices in the different implementation 

project phases, for different implementation roadmaps

●

Illustrate how Agile is supported through SAP Activate methodology

© Copyright. All rights reserved.

39

Unit 1
Lesson 3

Identifying Agile Project Fit

LESSON OBJECTIVES
After completing this lesson, you will be able to:

●

Identify when Agile provides good fit to my projects

● Analyse how to position Agile in the proposal

●

Identify the benefits Agile provides to customer

Story Map

Figure 37: Lessons Within Titles (Story Map)

40

© Copyright. All rights reserved.

Lesson: Identifying Agile Project Fit

Figure 38: Agile Project Fit

Agile Project Fit

To Agile or Not to Agile?

Figure 39: To Agile or Not to Agile?

Agile ways of working might not be possible or might be hard to achieve in some project 
situations. Before proposing an Agile approach for an SAP project, we must understand the 
project fit to an Agile approach. There are four aspects to consider:

● Project fit

● Organizational fit

● Project Manager fit

● Project Team and Stakeholder fit

Video: Considering the Key Aspects Before Proposing Agile Approach

For more information on Considering the Key Aspects Before Proposing Agile 
Approach, please view the video in the lesson Identifying Agile Project Fit in your 
online course.

Detailed elements to investigate on these four dimensions are available in the last unit.

© Copyright. All rights reserved.

41

Unit 1: Discovering the Basics

Figure 40: Preconditions Agile – What It Takes

This figure, Preconditions Agile – What It Takes, provides a great summary of preconditions 
for an Agile project.

Figure 41: The Cone of Uncertainty

The Cone of Uncertainty is a term often used in project management to describe the 
phenomenon by which project unknowns decrease over time. Understanding the principle 
behind the cone of uncertainty can help project managers and analysts as they estimate 
projects.

The cone of uncertainty is a graphic depiction of the increasing accuracy that's possible for 
estimates as the details of a project become more known over time. Project managers and 
developers use the cone of uncertainty to guide estimates and to manage expectations.

The term Cone of Uncertainty is used in software development where the technical and 
business environments change very rapidly. 

However, the concept, under different names, is a well-established basic principle of cost 
engineering. 

Most environments change so slowly that they can be considered static for the duration of a 
typical project, and traditional project management methods, therefore, focus on achieving a 
full understanding of the environment through careful analysis and planning. Well before any 
significant investments are made, the uncertainty is reduced to a level where the risk can be 
carried comfortably. 

42

© Copyright. All rights reserved.

Lesson: Identifying Agile Project Fit

In this kind of environment, the uncertainty level decreases rapidly in the beginning and the 
cone shape is less obvious. 

The software business, however, is very volatile and there's an external pressure to decrease 
the uncertainty level over time. The project must actively and continuously work to reduce the 
uncertainty level.

The Cone of Uncertainty is narrowed both by research and by decisions that remove the 
sources of variability from the project. These decisions are about scope, what's included and 
not included in the project. If these decisions change later in the project, then the cone will 
widen – and you’ll end up with an hourglass shape instead.

Note that the Cone of Uncertainty concept is independent of both of the following:

● The billing approach (Time and Material versus Fixed Price Project)

● The methodology (Waterfall versus Agile)

The difference between Agile and the traditional (Waterfall) approach is how the knowledge 
about the cone of uncertainty is used by the project and product management team.

The frequent reviews of the product increment that happens at the end of every cycle is the 
manner in which the Agile approaches are attempting to reduce the uncertainty. Feedback is 
received and real business needs are identified this way. Cycle by cycle, the estimation of the 
remaining work is improved based on the gained knowledge.

Another difference in the Agile approach is that the cost/budget utilization is kept within 
some guardrails and the scope is adjusted to fit these guardrails while also making sure that 
the minimum viable product is created. After the core functionalities are secured, the 
additional functionalities are implemented ordered by value, until the budget is consumed.

Figure 42: Discussing Agile Fit

Note that the conditions that challenge Agile aren’t complete no-goes. Instead, they’re risk 
elements that need mitigating.

Probably more than traditional waterfall, Agile needs to be tailored on a case-by-case basis, 
and some features are more often usable than others.

© Copyright. All rights reserved.

43

Unit 1: Discovering the Basics

Figure 43: AGILE EXAMPLE 1: Regulated Utility Business in Europe

This is one of our early examples of Agile projects. In this case, it's a regulated utility business 
in Europe.

Figure 44: AGILE EXAMPLE 2: Project with Fast Track Solution

This figure shows a fast track solution implementation in the United States.

44

© Copyright. All rights reserved.

Unit 1
Exercise 3

Case Study: Agile Project Fit

You are employed by CAFE RAGAZZA, a trendy Swiss consumer products company, which 
sells premium coffee machines, capsules, and accessories. CAFE RAGAZZA is currently the 
number four in the European market but is very ambitious and wants to become the market 
leader within three years.

For this, CAFE RAGAZZA has to improve the customer retention, turnover, and overall profit. 
Therefore, CAFE RAGAZZA is looking for the following improvements of their current SAP 
Commerce Cloud and SAP Service Cloud:

● Mobile sales app

● Telesales

● Customer experience web shop

CAFE RAGAZZA already has a SAP Commerce Cloud, SAP Service Cloud, and SAP S/4HANA 
solution in place.

Background Information

The customer is known at SAP for his complex and long SAP project implementations. The 
latest implementation of SAP S/4HANA and SAP Commerce Cloud escalated several times. 
Those implementations have been implemented by partners based on a design based ASAP 
roadmap approach.

The sales quarter is nearing soon and your local sales colleague (Service Account Manager), 
Johnny Cash went to Mr. Reuterli who's the responsible for the project implementation at 
customer site. Johnny told Mr. Reuterli about Agile. He thinks Agile is the best way for CAFE 
RAGAZZA to implement the project because he can expect faster results and to save overall 
implementation costs between 20–40%. That fits perfectly into the overall objectives of Mr. 
Reuterli because Mr. Smith, the CIO of the company, gave Mr. Reuterli the target to save 30% 
of the total IT implementation costs on a yearly basis.

Tomorrow morning at 09:00 you have your first meeting with Mr. Reuterli, who is responsible 
for the project implementation at RAGAZZA.

Your objective: Set the right expectations for the customer and check if Agile is the right 
approach for this project.

Note that the Service Account Manager (SAM) told the customer that, with Agile, 30% of 
project costs can be saved.

You are now preparing your meeting for tomorrow. Discuss in groups:

1. Based on what criteria are you checking if Agile is the right approach for RAGAZZA?

2. What kind of questions will you ask Mr. Reuterli to find out?

3. What can you do to set the right expectations?

4. Present your findings to the group.

© Copyright. All rights reserved.

45

Unit 1
Solution 3

Case Study: Agile Project Fit

You are employed by CAFE RAGAZZA, a trendy Swiss consumer products company, which 
sells premium coffee machines, capsules, and accessories. CAFE RAGAZZA is currently the 
number four in the European market but is very ambitious and wants to become the market 
leader within three years.

For this, CAFE RAGAZZA has to improve the customer retention, turnover, and overall profit. 
Therefore, CAFE RAGAZZA is looking for the following improvements of their current SAP 
Commerce Cloud and SAP Service Cloud:

● Mobile sales app

● Telesales

● Customer experience web shop

CAFE RAGAZZA already has a SAP Commerce Cloud, SAP Service Cloud, and SAP S/4HANA 
solution in place.

Background Information

The customer is known at SAP for his complex and long SAP project implementations. The 
latest implementation of SAP S/4HANA and SAP Commerce Cloud escalated several times. 
Those implementations have been implemented by partners based on a design based ASAP 
roadmap approach.

The sales quarter is nearing soon and your local sales colleague (Service Account Manager), 
Johnny Cash went to Mr. Reuterli who's the responsible for the project implementation at 
customer site. Johnny told Mr. Reuterli about Agile. He thinks Agile is the best way for CAFE 
RAGAZZA to implement the project because he can expect faster results and to save overall 
implementation costs between 20–40%. That fits perfectly into the overall objectives of Mr. 
Reuterli because Mr. Smith, the CIO of the company, gave Mr. Reuterli the target to save 30% 
of the total IT implementation costs on a yearly basis.

Tomorrow morning at 09:00 you have your first meeting with Mr. Reuterli, who is responsible 
for the project implementation at RAGAZZA.

Your objective: Set the right expectations for the customer and check if Agile is the right 
approach for this project.

Note that the Service Account Manager (SAM) told the customer that, with Agile, 30% of 
project costs can be saved.

You are now preparing your meeting for tomorrow. Discuss in groups:

1. Based on what criteria are you checking if Agile is the right approach for RAGAZZA?

2. What kind of questions will you ask Mr. Reuterli to find out?

3. What can you do to set the right expectations?

4. Present your findings to the group.

46

© Copyright. All rights reserved.

Lesson: Identifying Agile Project Fit

LESSON SUMMARY
You should now be able to:

●

Identify when Agile provides good fit to my projects

● Analyse how to position Agile in the proposal

●

Identify the benefits Agile provides to customer

© Copyright. All rights reserved.

47

Unit 1: Discovering the Basics

48

© Copyright. All rights reserved.

Unit 1

Learning Assessment

1. Which of the following statements about Scrum is correct?

Choose the correct answer.

X A In Scrum, as best practices, we have three main roles, and three artifacts or three 

ceremonies.

X B In Scrum, the team is self-organized, define all task necessary for all project life 

cycle.

X C The three ceremonies are Sprint Planning, Daily Scrum, Sprint Review 

(Retrospective).

X D Scrum Master defines and prioritizes features and gathers requirements.

2.

In the context of Scrum, which of the following statements are correct?

Choose the correct answers.

X A Product Backlog is a list of features prioritized by business value, the items come 

from diverse sources, including the Scrum team.

X B Sprint backlog is a subset of Product Backlog loaded onto the Sprint’s timebox. It's 

the list of work the team is addressing during the current Sprint.

X C Burndown Chart Provides visibility into the Product Backlog, illustrate progress by 

the team, work is in horizontal and time is in the vertical.

3. A burn-down chart is used to mark day-by-day how much remains of the scheduled work.

Determine whether this statement is true or false.

X True

X False

© Copyright. All rights reserved.

49

Unit 1: Learning Assessment

4. Which of the following activities are performed in the Explore phase of SAP Activate in 

SAP S/4HANA Implementation?

Choose the correct answers.

X A Defining organizational structure

X B Adjusting predelivered master data for workshops

X C Creating sample transactional data for workshops

X D Adjusting custom code objects

X E Writing Technical Design Documents

5. Scrum Board is a tool that helps teams make Sprint Backlog items visible. The board can 
take many physical and virtual forms but it performs the same function regardless of how 
it looks.

Determine whether this statement is true or false.

X True

X False

6. Which of the following statement are the true regarding the SAP Activate Community?

Choose the correct answer.

X A It provides information only on Cloud deployments.

X B It provides information only on premise deployments.

X C It provides information on both premise and Cloud deployments.

7. Which of the following are available in the initial SAP Activate Community Page?

Choose the correct answers.

X A Information on implementation roadmaps

X B Blogs on SAP Activate topics

X C Latest SAP Activate content updates

X D Resources for SAP Activate project deployments

50

© Copyright. All rights reserved.

UNIT 2 Starting Agile

Lesson 1

Identifying the Roles and Responsibilities

Exercise 4: Case Study: Scrum Master and Project Manager

Lesson 2

Designing Agile Project Organization

Exercise 5: Case Study: Agile Project Organization

Lesson 3

Preparing the Agile Project

Exercise 6: Case Study: Create Scrum Teams

52

65

68

79

82

87

UNIT OBJECTIVES

●

Identify the roles and responsibilities in the Agile project

● Describe the role of the Scrum Master and differentiate with the Project Manager

● Outline the responsibilities of the Scrum team and Product Owner

● Organize the different scrum teams

● Set up an Agile project

● Scale agile concepts to larger projects

●

Identity the Agile related activities to be completed in the Prepare phase

● Discover how an Agile project views documentation

© Copyright. All rights reserved.

51

Unit 2
Lesson 1

Identifying the Roles and Responsibilities

LESSON OBJECTIVES
After completing this lesson, you will be able to:

●

Identify the roles and responsibilities in the Agile project

● Describe the role of the Scrum Master and differentiate with the Project Manager

● Outline the responsibilities of the Scrum team and Product Owner

Story Map

Figure 45: Lessons Within Titles (Story Map)

52

© Copyright. All rights reserved.

Lesson: Identifying the Roles and Responsibilities

Figure 46: Agile Roles and Responsibilities

Roles and Responsibilities

Figure 47: SCRUM Roles – Overview

A Scrum Team is usually a team of five to nine people and is responsible for the 
implementation. There are three main roles within the team: Product Owner, Team, and 
Scrum Master. Within the team, there can only be one Product Owner.

The Product Owner is a process-knowledgeable person from the customer and defines the 
requirements and priorities of the project.

The Scrum Master is the servant team leader who's responsible for moderating meetings, 
coaching the team in terms of Scrum processes and improvements, and giving support in 
resolving any issues during the project.

There are no assigned roles and hierarchies within the team. The cross-functional team is 
responsible for design, development, testing, and any other resulting tasks. The Scrum team 
is self-managing, and, while it can seek help and advice from outside the team, the inner 
workings of the team shouldn't be affected by people outside of the team.

© Copyright. All rights reserved.

53

Unit 2: Starting Agile

Figure 48: Role Summary

While the Project Manager holds the overall responsibility of the project, they don't advise on 
what or how things are done. The Product Owner sets what's required and its priority, having 
a very good business understanding.

The Development Team (Project Team) defines how the requirements are implemented as 
they have the technical expertise. They also estimate the effort for each item.

Figure 49: SCRUM Team Roles & Responsibilities – Product Owner

Product Owner – Responsibilities and Tasks

●

Is responsible for the success of the product and, therefore, of the final value

● Provides a complete picture and vision for the product

● Knows customer contacts for product reviews

● Knows and understands market or key customers' business needs

● Has the required business process knowledge as well as domain expertise

● Has a complete picture of the product standards

54

© Copyright. All rights reserved.

Lesson: Identifying the Roles and Responsibilities

● Builds feature plans

● Decides on priorities for product development based on the highest business value

● Deals with stakeholders for product requirements

● Communicates and explains product requirements to the development team

● Transfers customer and market demands to the development team

● Knows relevant stakeholders to deal with

● Advocates to others (for example, management, stakeholders)

● Has persuasive communication skills and is a good listener

● Organizes or participates in test cycles

● Has the overall responsibility and accountability of his Product Backlog

Figure 50: Critical Success Factor: Product Owner

A critical success factor for an Agile approach like Scrum is to have a good Product Owner.

The figure, Critical Success Factor: Product Owner, describes some of the characteristics of a 
successful Product Owner.

Figure 51: Product Owner Failure Modes

On the contrary, if a Product Owner isn't empowered, available, or qualified they can barely do 
their job properly. If one of these items is identified, quick actions have to be taken.

© Copyright. All rights reserved.

55

Unit 2: Starting Agile

The Scrum Master supports the Product Owner by coaching them and trying to improve their 
way of working.

Figure 52: SCRUM Team Roles and Responsibilities

Scrum Team Tasks

● Map/implement the vision and process requirements of the Product Owner to the SAP 

environment.

● Use as many SAP standard accelerators as possible.

● Demonstrate the standard process in the SAP environment to the Product Owner.

● Provide input and ideas to the Product Owner about how to make the product as good as it 

can be and support to refine the User Stories.

● Help the Product Owner to understand the system so that they can define the wish list.

● During Sprints, develop the highest priority features.

Figure 53: Scrum Team

A critical success factor of the Scrum Team is to be stable, as each member change is 
bringing in new dynamics, which keeps the team busy for some time and requires new 
improvement activities.

The figure, Critical Success Factor: Stable Teams, describes some of the features of a stable 
team.

56

© Copyright. All rights reserved.

Lesson: Identifying the Roles and Responsibilities

Figure 54: SCRUM Team Roles and Responsibilities – Cross-Functional Team (Examples)

The team requires various roles and responsibilities to properly implement an SAP solution. 
This figure shows some examples. They don't necessarily need to be a one-to-one person 
mapping – a person can have multiple roles.

Figure 55: Example: SAP Agile Project Team

Most of SAP projects are too big and complex to be implemented by one team. Teams are 
supposed to be independent of each other, which doesn't really reflect the reality. In this case, 
in SAP Activate, we use the Scrum of Scrums approach, where representatives of each team 
get together to discuss and manage the shared requirements and dependencies. Usually a 
Scrum Master or an Agile Coach supports them to keep the Scrum process and to overcome 
obstacles.

© Copyright. All rights reserved.

57

Unit 2: Starting Agile

Figure 56: Scrum Master

The Scrum Master is a servant leader who's responsible for moderating events, ensuring the 
Scrum process is respected, and supporting in resolving any issues during the project. The 
Scrum Master has the authority to terminate any development Sprint in case unresolvable 
issues arise or the workload proves to be unrealistic.

Scrum Master is a process facilitator, guide, coach, mentor, trainer, and motivator of the 
team. Scrum Master key responsibilities include the following:

● Helps the team to develop and adopt practices facilitating Agile understanding and project 

execution

● Acts as a guide in helping the team to adhere to the Scrum principles and practices

● Supports the team in getting direct access to the customer or Product Owner

● Supports removing impediments that prevent the team from completing the planned 

functionality

● Protect the team from bureaucracy and nonvalue added activities

● Provides thought leadership in Agile management tools being used by the team

● Facilitating and coaching self-organization

Finally, a Scrum Master helps the team to grow and achieve their goals, AND DOESN'T control 
or command the team. They're accountable for the team improvement and their way of 
working. In a perfect world, a Scrum Master could leave the team once it's fully self-sufficient. 
In reality, this rarely happens.

58

© Copyright. All rights reserved.

Lesson: Identifying the Roles and Responsibilities

Figure 57: Critical Activities for the Scrum Master

A successful Scrum Master requires a blend of soft and hard skills. They must excel in 
facilitation, communication, and conflict resolution. Scrum Master must and be adept at the 
servant leadership approach and must understand coaching and change management. A 
deep understanding of Agile and Scrum principles is critical, as are patience and empathy 
towards team members. While technical knowledge and understanding of the software 
development process can be advantageous, the ability to measure and report progress 
effectively is key. Above all, Scrum Masters should be committed to the team's success and 
constantly strive for self-improvement.

Figure 58: SCRUM Team Roles and Responsibilities – Scrum Master – Eight Stances

Abstracting the skills of a Scrum Master, they need to bring high skills in the following roles as 
described in the figure:

●

Impediment remover

© Copyright. All rights reserved.

59

Unit 2: Starting Agile

● Facilitator

● Coach

● Teacher

● Servant Leader

● Manager

● Change Agent

● Mentor

This is often an underestimated job, which brings a lot of value to the teams, and the success 
is hard to measure as each team is different and makes different progress.

Figure 59: Scrum Master Checklist Example

Those are known Scrum Master checklists to identify improvement areas.

60

© Copyright. All rights reserved.

Lesson: Identifying the Roles and Responsibilities

Responsibilities in the Scrum Team – Who Pulls Where?

Figure 60: Responsibilities in the Scrum Team – Who Pulls Where?

Video: Illustrating the Three Roles of a Scrum Team

For more information on Illustrating the Three Roles of a Scrum Team, please 
view the video in the lesson Identifying the Roles and Responsibilities in your 
online course.

In summary, the three roles of a Scrum Team are pulling from three corners of the magical 
triangle.

While the Product Owner's interest is to generate as much business value as possible by 
requesting their Backlog Items being implemented as fast as possible, the Development 
Team has an interest in delivering quality and not quantity.

The solution is supposed to be rigid and stable, which does cost time.

The Scrum Master in the third corner is mainly looking for improvements in the Team and the 
Product Owner. They want them to perform and collaborate, being efficient, but able to adapt 
fast, according to the needs.

To keep those three interests in balance is important.

© Copyright. All rights reserved.

61

Unit 2: Starting Agile

Figure 61: Project Manager

In an Agile customer project, the role of a Project Manager might not be the same as in a 
traditional project management setting, but there's still a need for someone to perform some 
critical functions that are commonly associated with project management.

The PM is responsible for the contractual delivery and all administration around the teams 
and external communication and stakeholder management, although they aren't deeply 
involved anymore as the teams are now following a self-organized and decentralized 
approach. There are contractual borders and needs that have to be followed and respected, 
setting the boundaries in an SAP project. This goes along with time, budget, and even scope 
management on higher granularity (depending on the contract type).

Here are a few reasons why we still need a project manager or someone performing a similar 
role:

● Communication: A project manager facilitates communication between the team and the 
client and stakeholders. They ensure that all stakeholders have a clear understanding of 
the project's progress, issues, and changes.

● Resource Allocation: Project managers play a crucial role in managing resources, including 
people, budget, and materials. They can ensure that resources are allocated and utilized 
efficiently.

● Risk Management: Project managers can help with identifying and managing risks and 

issues. They can anticipate potential roadblocks and plan for them accordingly.

● Project Vision and Strategy: While the team focuses on the tasks at hand, someone needs 
to keep an eye on the bigger picture. The project manager helps maintain the strategic 
vision and ensures that the team's work aligns with this vision. This can go along with Chief 
Product Owners in a scaled environment.

● Client Management: Project managers often act as the primary contact for clients. They 

manage client expectations, handle issues that can’t be handled by the teams, and ensure 
that the client is satisfied with the project's progress and results.

● Conflict Resolution: In any team, conflicts can arise. A project manager can help mediate 
disputes and find solutions that satisfy all parties, even if this is a primary task of a Scrum 
Master.

● Process Adherence: Agile methodology is about flexibility and adaptation, but it also 

includes specific processes and ceremonies. A project manager with the Scrum Master 
ensures that the team is adhering to these processes.

62

© Copyright. All rights reserved.

Lesson: Identifying the Roles and Responsibilities

Figure 62: Chicken and Pigs Analogy: Know Your Stakeholders

The fable of the Chicken and the Pig is used to illustrate the differing levels of project 
stakeholders involved in a project. The basic fable goes as follows:

A pig and a chicken are walking down the road.

The chicken says: "Hey Pig, I was thinking we should open a restaurant!"

The pig replies: "Hmm, maybe. What would we call it?"

The chicken responds: "How about 'ham-n-eggs'?"

The pig thinks for a moment and says: "No thanks. I'd be committed, but you'd only be 
involved."

Sometimes, the story is presented as a riddle:

Question: In a bacon-and-egg breakfast, what's the difference between the chicken and the 
pig?

Answer: The chicken is involved, but the pig is committed!

The fable was referenced to define two types of project members by the Scrum Agile 
management system: pigs, who are totally committed to the project and accountable for its 
outcome, and chickens, who consult on the project and are informed of its progress. This 
analogy is based on the pig, who provides bacon (a sacrificial offering, for which the pig must 
die) versus the chicken, who provides eggs (non-sacrificial).

For a Scrum project, the Development Team are considered people who are committed to the 
project while Product Owners, Scrum Masters, customers, and executive management, are 
considered to be involved but not committed to the project.

© Copyright. All rights reserved.

63

Unit 2: Starting Agile

64

© Copyright. All rights reserved.

Unit 2
Exercise 4

Case Study: Scrum Master and Project 
Manager

Mr. Reuterli is suggesting that Mr. David Blitz, one of his own project managers, should fulfill 
the role of Scrum Master. As Agile project manager/ consultant, you know that the Scrum 
Master role is one of the key success factors. You want to make sure that he's the right 
person for this job.

Background Information:

Mr. Blitz has a proven track record of successful project implementations at RAGAZZA. He's 
known for his detailed project and action plans. Mr. Blitz wants to show his upper 
management that he's in control of the project and his objective is to deliver projects on time 
and within budget. Mr. Blitz does not have any experience with Agile and Scrum yet.

His strengths are:

● Very profound analysis skills

● Very organized

● Likes to-do lists

● Correct and accurate procedures are important

He does not like:

● To make mistakes

● Being criticized

● Fast decisions when there is not enough time to make a good evaluation of the problem

You're now preparing your meeting for tomorrow afternoon with Mr. Blitz. Prepare a short 
presentation where you explain the following elements on a flipchart:

1. Explain to Mr. Blitz the Scrum Master role and its corresponding main activities and 

responsibilities.

2. Point out the difference between a Scrum Master and a project manager.

3. Present your findings to the other teams.

© Copyright. All rights reserved.

65

Unit 2
Solution 4

Case Study: Scrum Master and Project 
Manager

Mr. Reuterli is suggesting that Mr. David Blitz, one of his own project managers, should fulfill 
the role of Scrum Master. As Agile project manager/ consultant, you know that the Scrum 
Master role is one of the key success factors. You want to make sure that he's the right 
person for this job.

Background Information:

Mr. Blitz has a proven track record of successful project implementations at RAGAZZA. He's 
known for his detailed project and action plans. Mr. Blitz wants to show his upper 
management that he's in control of the project and his objective is to deliver projects on time 
and within budget. Mr. Blitz does not have any experience with Agile and Scrum yet.

His strengths are:

● Very profound analysis skills

● Very organized

● Likes to-do lists

● Correct and accurate procedures are important

He does not like:

● To make mistakes

● Being criticized

● Fast decisions when there is not enough time to make a good evaluation of the problem

You're now preparing your meeting for tomorrow afternoon with Mr. Blitz. Prepare a short 
presentation where you explain the following elements on a flipchart:

1. Explain to Mr. Blitz the Scrum Master role and its corresponding main activities and 

responsibilities.

2. Point out the difference between a Scrum Master and a project manager.

3. Present your findings to the other teams.

66

© Copyright. All rights reserved.

Lesson: Identifying the Roles and Responsibilities

LESSON SUMMARY
You should now be able to:

●

Identify the roles and responsibilities in the Agile project

● Describe the role of the Scrum Master and differentiate with the Project Manager

● Outline the responsibilities of the Scrum team and Product Owner

© Copyright. All rights reserved.

67

Unit 2
Lesson 2

Designing Agile Project Organization

LESSON OBJECTIVES
After completing this lesson, you will be able to:

● Organize the different scrum teams

● Set up an Agile project

● Scale agile concepts to larger projects

Story Map

Figure 63: Lessons Within Titles (Story Map)

68

© Copyright. All rights reserved.

Lesson: Designing Agile Project Organization

Figure 64: Agile Project Governance and Scaling

Agile Project Organization

Figure 65: Scaling Agile

We're scaling programs/projects, as an SAP implementation is not typically only the 
implementation of one sub area (for example, Order Management in SAP S/4HANA).

This means that alignment is required across multiple process areas and applications being 
implemented at the same time.

Scaled Scrum is an approach to implementing Scrum in large, complex projects involving 
multiple teams working on the same product. It extends the Scrum principles to a larger scale 
while preserving the core values and goals of the original Scrum framework. Scaled Scrum 
projects have unique characteristics that distinguish them from single-team Scrum projects. 
Understanding these characteristics is essential for effective project management and 
successful product delivery.

● Multiple Scrum Teams: A Scaled Scrum project involves multiple Scrum Teams working in 
parallel. These teams work collaboratively towards a shared goal. Each team maintains its 
independence but must also coordinate with other teams to ensure alignment and 
consistency across the entire project.

● Coordinated Sprints: In a Scaled Scrum project, all teams operate on the same sprint 

schedule. This simultaneous sprint execution allows for coordinated planning, review, and 

© Copyright. All rights reserved.

69

Unit 2: Starting Agile

retrospective meetings, fostering better synchronization, integration, and communication 
across teams.

●

Integrated Product Backlog: Scaled Scrum projects feature an integrated product backlog. 
While each team may have its individual backlog, there's a single overarching product 
backlog that guides the work of all teams. This ensures that all teams align with the 
project's overall objectives.

● Scrum of Scrums: To manage interteam dependencies and coordinate efforts, Scaled 
Scrum projects often employ a Scrum of Scrums approach. This is a meeting where 
representatives from each team discuss progress, obstacles, and coordination issues.

● Shared Definition of Done: In Scaled Scrum, all teams agree on a shared definition of Done. 
This shared understanding ensures consistency and quality across teams and maintains 
the integrity of the final product.

● Larger Scope and Complexity: Scaled Scrum projects usually have a larger scope and 

complexity than single-team Scrum projects. They often involve larger codebases, more 
stakeholders, and more complex integration and coordination efforts.

● Greater Emphasis on Integration and Coordination: Due to the large number of teams and 
the complexity of the product, there's a greater emphasis on integration and coordination 
in Scaled Scrum projects. Regular integration helps detect issues early and reduces the 
risk of late-stage integration problems. Scaled Scrum is an approach to implementing 
Scrum in large, complex projects involving multiple teams working on the same product. It 
extends the Scrum principles to a larger scale while preserving the core values and goals of 
the original Scrum framework. Scaled Scrum projects have unique characteristics that 
distinguish them from single-team Scrum projects. Understanding these characteristics is 
essential for effective project management and successful product delivery.

Further needs and characteristics of larger teams are listed in the figure.

Figure 66: SAP Project Organization Designed for Agile Collaboration

This is an example of how a large program would structure itself. The top layer is the Project 
Management Workstream.

70

© Copyright. All rights reserved.

Lesson: Designing Agile Project Organization

The middle layer is the Application Design and Configuration Workstream, which is built up by 
multiple Scrum Teams. The teams are preferably split according to the end-to-end processes 
that they're organized against.

The lower layers are the other Workstreams (which have an integration and overall alignment 
focus with the Scrum Teams from the Application Design and Configuration workstream).

Figure 67: How to Start Scaling Agile Teams

The following guidelines will help to establish a global Agile program or large project.

● Start Small and Build Gradually: Starting with a small core team to set up the project 

structure and identify the initial product backlog is a good approach. This team can work 
on defining the project vision, scope, and initial backlog. Once these are established, more 
team members can be onboarded gradually as the project progresses.

●

Identify Leads and Coaches: As more members are added and scrum teams are built, it's 
important to identify leads and coaches who can guide the teams. These individuals can 
help maintain the Agile principles and practices, and provide direction and support.

● Maintain Agile Principles: Even as the project grows in scale and complexity, it's crucial to 
stick to the Agile principles. This includes maintaining the Scrum framework in a Scrum of 
Scrums setting where multiple Scrum Teams are working on different aspects of the 
project.

●

●

Introduce a Product Manager: A Product Manager, or a team of Workstream leads and 
Chief Product Owners, can help to focus on the overall planning activities. They can 
coordinate between different teams, manage the product backlog, and ensure that the 
project is progressing towards its goals.

Identify and Staff System Teams: System teams focus on integration aspects like 
architecture, functions, technology, and organizational change management. These teams 
can help to ensure that the different components of the project work well together and 
meet the project requirements.

● Use a Hierarchical Product Backlog: A hierarchical Product Backlog that has multiple 

Product Owners and is decomposed into team Backlogs can be useful in managing the 
work. This allows for better visibility and control over the work being done.

© Copyright. All rights reserved.

71

Unit 2: Starting Agile

● Pilot Project: Starting with a pilot project can be a great way to demonstrate Agile success. 
This can help to gain buy-in from stakeholders and also provide a learning opportunity for 
the team before they embark on larger, more complex projects.

●

Invest in Training and Coaching: It's important to ensure that the team members are well-
versed in Agile principles and Scrum practices. Agile Coaches and Scrum Masters can 
provide training and guidance to the team members to help them work effectively in an 
Agile environment.

● Regular Reviews and Retrospectives: Regular reviews and retrospectives can help to 

identify any issues or challenges and make the necessary adjustments. This is a key part of 
the Agile approach and helps to ensure continuous improvement.

● Communication and Collaboration: In a global project, good communication and 
collaboration are key. Tools and practices should be in place to facilitate effective 
communication across different time zones and cultures.

● Respect for Cultural Differences: When working on global projects, it's important to 

respect and understand cultural differences. This can help to build a more inclusive and 
effective team.

● Embrace Change: Agile is all about embracing change. The team should be prepared to 

adapt and make changes as necessary to meet the project goals. Remember, it's 
important to tailor these principles to the specific needs and context of your project. Agile 
isn’t a one-size-fits-all approach, so feel free to adapt and adjust these principles as 
necessary.

Figure 68: Scaling Agile – Governance in Large (and Mid-Sized) Agile Projects

In midsize and large projects, each Scrum Team has a dedicated Scrum Master (or in some 
situations, they may share a Scrum Master across teams.). A Scrum Master shouldn’t have 
more than three teams, depending on their availability and the team's maturity.

Each team works with one Product Owner, reporting to the Chief Product Owner who's 
overlooking a large process or business area.

The Solution Architect is typically a shared role in all projects and is called upon by the 
Product Owners and Scrum Teams as needed to provide general architectural guidelines.

72

© Copyright. All rights reserved.

Lesson: Designing Agile Project Organization

The Project Manager manages the relationship with project stakeholders and oversees the 
overall project timeline, scope, and budget.

The Project Manager is responsible for delivering the contract and carries the accountability 
for the delivery of the committed scope.

Figure 69:  SAP Activate Workstreams and Activities

SAP Activate is all about scaling as it defines all the relevant workstreams and activities 
during an implementation.

Within the Application Design and Configuration workstream, you'll find the Scrum Teams as 
depicted in the figure Scaling Agile – Governance in Large (and Mid-Sized) Agile Projects.

The other workstreams are thereby transversal workstreams that focus on the alignment and 
integration across the project/ program.

Figure 70: How to Deal with (Multiple) Product Owners?

Product Owners play a crucial role in Agile development methodologies, such as Scrum. 
They're responsible for maximizing the value of the product and of the work delivered by the 
Development Team. They do this by managing the Product Backlog, which contains all the 
features, functions, and enhancements that need to be made to the product. The Product 
Owner's responsibilities can be grouped into three levels – strategic, tactical, and operational:

● Strategic: At the strategic level, the Product Owner is responsible for defining the vision for 
the Product. This includes understanding the market, the customer, and the business 
strategy, and using this understanding to create a product roadmap. The Product Owner 
also needs to communicate this vision to the stakeholders and the development team. In 

© Copyright. All rights reserved.

73

Unit 2: Starting Agile

relation to Conway's law, the Product Owner must ensure that the product vision aligns 
with the organization's communication structure. If the organization is divided into many 
different departments or teams, the Product Owner must make sure that these entities 
work together effectively to achieve the product vision.

● Tactical: At the tactical level, the Product Owner is responsible for managing the Product 
Backlog. This includes prioritizing the items in the Backlog based on their value to the 
business and to the customer, and making sure that the development team understands 
what needs to be done. According to Conway's law, the way the Product Backlog is 
managed should mirror the organization's communication structure. For example, if the 
organization is divided into teams that each specialize in a different area, the Product 
Backlog should be divided into similar areas.

● Operational: At the operational level, the Product Owner is responsible for making sure 

that the Development Team has everything they need to complete its work. This includes 
answering questions, removing obstacles, and making decisions about the product. Again, 
according to Conway's law, the operational activities of the Product Owner should align 
with the organization's communication structure. If the organization is divided into teams 
that each specialize in a different area, the Product Owner should work closely with each 
team to ensure that they have what they need to do their work.

In conclusion, the Product Owner plays a key role at all three levels: strategic, tactical, and 
operational. Conway's law suggests that the way the Product Owner performs these roles 
should align with the organization's communication structure. This can help to ensure that 
the Product is developed in the most effective and efficient way possible.

Figure 71: Scaling Agile – Product Ownership Complexities

74

© Copyright. All rights reserved.

Lesson: Designing Agile Project Organization

Figure 72: Coordinate Work Among Teams

A Scrum of Scrums meeting is a coordination meeting in a scaled Agile context. It's a 
technique used when multiple Scrum Teams are working on the same project and need to 
coordinate their work. In this meeting, representatives (usually the Scrum Masters, but it 
could be any members as long as they have enough understanding of the team's work) from 
each Scrum Team get together to discuss their work. They share what their team has been 
working on, what they're going to work on, and any obstacles that are in their way. This helps 
ensure that all teams are aligned, aware of what the other teams are doing, and can help each 
other remove impediments. The Scrum of Scrums is different from a daily standup or daily 
Scrum meeting in several ways:

● Level of detail: In a daily Scrum meeting, the team discusses the specifics of what they'll be 

working on for that day and any blockers they’re facing. In the Scrum of Scrums, the 
discussion is at a higher level, discussing progress, dependencies, or obstacles at the team 
level rather than the individual level.

● Participants: A daily Scrum meeting involves all members of a single Scrum Team. The 

Scrum of Scrums involves representatives from multiple teams.

● Frequency: While daily Scrum meetings are held every day, the Scrum of Scrums may not 

be held as frequently. It could be held daily, but it's often held less frequently, such as twice 
a week or once a week, depending on the needs of the organization.

● Purpose: The purpose of the daily Scrum is to synchronize activities and create a plan for 
the next 24 hours. The Scrum of Scrums, on the other hand, is focused on coordinating 
and integrating the work of multiple Scrum Teams. In summary, while the daily Scrum 
focuses on the coordination of work within a single team, the Scrum of Scrums is used to 
coordinate work across multiple teams.

© Copyright. All rights reserved.

75

Unit 2: Starting Agile

Figure 73: Scaled Scrum Events in SAP Agile Project

Besides the Scrum of Scrums, which is very operational on the teams level, further scaling 
events are helpful to coordinate vision and goals.

The Product Owner Meeting (Board) is supposed to get all Product Owners together and align 
on the requirements in case there are potential dependencies. They're setting common goals 
for Waves and Sprints to ensure that value can be delivered jointly and the teams aren’t pulled 
into different directions.

Scrum Masters are getting together as well, exchanging on their team progress, common 
issues and maturities of the teams, and their impediments. Together with the Chief Scrum 
Master, they're working on strategies to improve the teams and to ensure that the project 
keeps flowing.

Last but not least, the Scrum of Scrums follow up might be required depending on the 
outcome of the Scrum of Scrums to realign with the teams, Product Owner, and Architect to 
solve issues, communicate on the decisions taken with the other teams, and to update the 
task board.

Figure 74: Lessons Learned

Theory and Practice aren't always aligned for different reasons.

76

© Copyright. All rights reserved.

Lesson: Designing Agile Project Organization

Therefore, the following figure and links below provide some experiences and lessons learned 
on popular scaling frameworks.

Figure 75: Popular Scaling Frameworks

Scaled Agile Framework (SAFe): https://blogs.sap.com/2019/05/28/using-sap-activate-in-
scaled-agile-environment/

The Nexus™ Guide: https://www.scruminc.com/scrum-incs-scrum-at-scale-framework

Scrum at Scale™ Frameworkhttps://www.scrum.org/resources/nexus-guide

Spotify Model: https://labs.spotify.com/2014/03/27/spotify-engineering-culture-part-1/

Large-Scale Scrum: https://less.works/

In the Agile world, there are several scaling frameworks being used by Customer 
organizations.

SAP Activate is considering them but is mainly based on the less complex Scrum-of-Scrums 
approach.

Still, it's important to understand the most common scaling frameworks and their implication, 
as an SAP Activate project might need to be embedded into such an environment.

© Copyright. All rights reserved.

77

Unit 2: Starting Agile

78

© Copyright. All rights reserved.

Unit 2
Exercise 5

Case Study: Agile Project Organization

Mr. Reuterli is asking you what the project organization and governance should look like.

Prepare a short presentation of the governance structure of the RAGAZZA SAP Agile project:

1. How many Scrum teams do we need?

2. Describe the typical size and members of a SAP Agile Scrum team.

3. How do the different teams collaborate with each other on a technical, project 

management, and product owner level?

4. Present your findings to the other teams (maximum two minutes).

© Copyright. All rights reserved.

79

Unit 2
Solution 5

Case Study: Agile Project Organization

Mr. Reuterli is asking you what the project organization and governance should look like.

Prepare a short presentation of the governance structure of the RAGAZZA SAP Agile project:

1. How many Scrum teams do we need?

2. Describe the typical size and members of a SAP Agile Scrum team.

3. How do the different teams collaborate with each other on a technical, project 

management, and product owner level?

4. Present your findings to the other teams (maximum two minutes).

80

© Copyright. All rights reserved.

Lesson: Designing Agile Project Organization

LESSON SUMMARY
You should now be able to:

● Organize the different scrum teams

● Set up an Agile project

● Scale agile concepts to larger projects

© Copyright. All rights reserved.

81

Unit 2
Lesson 3

Preparing the Agile Project

LESSON OBJECTIVES
After completing this lesson, you will be able to:

●

Identity the Agile related activities to be completed in the Prepare phase

● Discover how an Agile project views documentation

Story Map

Figure 76: Lessons Within Titles (Story Map)

Figure 77: Agile Project Governance and Scaling

82

© Copyright. All rights reserved.

Prepare Agile Project

Lesson: Preparing the Agile Project

Figure 78: Main Activities During the Prepare Phase

The Prepare phase, as per its name, deals with all kinds of project preparation activities. 
Having the contract and the scope document as inputs, the roles and the responsibilities for 
the project are aligned, and the governance is established.

Project roles are staffed, and trainings on the methodology and on the solution are scheduled. 
Some trainings, for instance, the self-enablement e-learnings, can be taken already, so that 
the team approaches the Explore phase with most of the knowledge prerequisites covered.

The systems needed for Fit-to-Standard workshops are made available – the initial 
environment is provisioned, and in-scope best practices are set up and activated.

Project vision and measurements for tracking progress and value delivery reporting are 
established. SAP Activate methodology Quality Gates are aligned and integrated in the project 
standards.

Specific activities need to be foreseen depending on the adoption option – new 
implementation, conversion or selective data transition, public or private cloud.

Documentation standards are defined, and tools for managing documentation are in place as 
well as approvals and quality validation procedures.

Virtual collaboration tools are agreed and made available for the project team.

The project kick-off is organized to mark the project start and to align all the team members 
to the same standards and objectives.

© Copyright. All rights reserved.

83

Unit 2: Starting Agile

Figure 79: And What About Documentation?

The documents identified as valuable deliverables for the project and agreed upon as part of 
the project standards must be managed during the project duration. After the go-live, this 
documentation will be very useful for the operations team who will manage the solution.

We may need to manage many types of documentation: project documentation, solution 
documentation, interface specifications, technical design documents, or training manuals.

All documentations can be managed in SAP Cloud ALM for the cloud solutions or in SAP 
Solution Manager for the on-premise ones.

Although SAP Cloud ALM doesn't have a document repository such as SAP Solution Manager, 
it provides capabilities to create documentation directly in the tool using the Document 
element. The document can be linked to the process to enable easy reuse of the 
documentation beyond the project. Documents and their status can also be tracked in the 
solution process traceability. 

In SAP Cloud ALM, documents have status, priority, and a human readable ID. Using the text 
editor, the content can be captured directly in SAP Cloud ALM. 

Figure 80: SAP Cloud ALM Is Integrated with SAP BTP DMS for Managing Documents

84

© Copyright. All rights reserved.

Lesson: Preparing the Agile Project

Since SAP Cloud ALM is a public cloud offering – free of charge for SAP customers – the 
storage is limited to 8 GB. This wouldn't allow the storing of many documents. Within SAP 
Cloud ALM, you have many functionalities to document directly in the tool using an editor. 
This content can easily be used in search scenarios or for extracting information using various 
techniques.

However, we know that customers still need to manage these external documents such as 
Microsoft Word documents, Excel, or PowerPoint. There are three options to manage these 
documents:

● You can store your documents in any local repository, for example, Microsoft SharePoint, 

and link them into SAP Cloud ALM using a URL reference.

●

Integration to SAP Business Technology Platform (BTP) Document Management service 
using the DMS as content storage: If you want to have advanced document management 
features, you can provision SAP BTP DMS and use the integration provided from SAP 
Cloud ALM.

● Later (in 2024), we also plan to offer an option to use other repositories such as Google 

docs and Sharepoint via the SAP BTP integration.

SAP BTP DMS is part of the Harmonized Document Management approach SAP is following. 
SAP S/4HANA and other tools are also using this integration. The solution needs to be 
requested by the customer before the integration can be used. It isn't part of the SAP Cloud 
ALM provisioning.

Figure 81: SAP Activate Methodology Key Characteristics

SAP places quality at the center of projects that we deliver for our customers.

A Quality Gate gives oversight and early visibility into potential risks and issues.  It has a 
profound impact on reducing project risk and driving Customer Value.

Quality Gates Objectives:

● Assure quality at the milestones of the project.

● Assure that all key deliverables and actions have been completed in compliance with best 

practices.

● Avoid customer dissatisfaction.

● Enable project managers to continuously communicate and build quality into the project.

© Copyright. All rights reserved.

85

Unit 2: Starting Agile

Quality Gates Benefits:

● Enhance project quality

● Minimize project risk exposure

● Manage expectations and monitor customer satisfaction

●

Improve transparency of the project

● Reduce cycle time – get it done right the first time

We need to understand that a project Quality Gate isn't:

● A guarantee that the project will carry out no more risks and will never escalate

● A comprehensive project management review that prioritizes and reports all project risks 

and recommendations in a balanced way

● A detailed content review of all key deliverables of the project

● A complete view on the project, because the customer typically isn't involved in these 

sessions (as of now)

Figure 82: SAP Activate Quality Gate Exit Requirements for the Prepare Phase Example

Typical exit criteria to be met are shown here. It should be noted that some of them may have 
to be adapted to the specific case.

86

© Copyright. All rights reserved.

Unit 2
Exercise 6

Case Study: Create Scrum Teams

1. Create a cross-functional team with people who have different backgrounds, jobs, gender, 

and/or nationality.

● One Team: Mobile Sales App

● One Team: Telesales

● One Team: Customer Experience Webshop

2. For each team, decide who will be the Scrum Master and who will be the Product Owner.

3. Decide on a name for the team and a logo and/or slogan.

4. Present your findings to the other teams.

© Copyright. All rights reserved.

87

Unit 2
Solution 6

Case Study: Create Scrum Teams

1. Create a cross-functional team with people who have different backgrounds, jobs, gender, 

and/or nationality.

● One Team: Mobile Sales App

● One Team: Telesales

● One Team: Customer Experience Webshop

2. For each team, decide who will be the Scrum Master and who will be the Product Owner.

3. Decide on a name for the team and a logo and/or slogan.

4. Present your findings to the other teams.

88

© Copyright. All rights reserved.

Lesson: Preparing the Agile Project

LESSON SUMMARY
You should now be able to:

●

Identity the Agile related activities to be completed in the Prepare phase

● Discover how an Agile project views documentation

© Copyright. All rights reserved.

89

Unit 2: Starting Agile

90

© Copyright. All rights reserved.

Unit 2

Learning Assessment

1. Which of the following are the key responsibilities of the Scrum Master?

Choose the correct answers.

X A Responsible for the project delivery

X B Task initiator

X C Team protection

X D Leadership skill

X E Team support

2. The Product Owner's responsibilities can be grouped into three levels – strategic, tactical, 

and operational.

Determine whether this statement is true or false.

X True

X False

3. Product Backlog is simply a list of all things that needs to be done within the project. It 

replaces the traditional requirements specification artifacts.

Determine whether this statement is true or false.

X True

X False

© Copyright. All rights reserved.

91

Unit 2: Learning Assessment

92

© Copyright. All rights reserved.

UNIT 3 Creating Backlog

Lesson 1

Explore Phase Overview

Lesson 2

Creating Product Backlog

Exercise 7: Case Study: User Story Map

Exercise 8: Case Study: Create User Stories

Exercise 9: Case Study: Rank User Stories and Define Releases

Lesson 3

Analyzing the Definitions of Ready and Done

Exercise 10: Case Study: Definition of Ready and Done

95

103

125

127

129

132

137

UNIT OBJECTIVES

● Structure the Explore phase

● Discover how the team will collect requirements and prioritize work

● Discover the value of effective Product Backlog management

●

●

●

●

Illustrate how to capture requirements in SAP projects

Identify the artefacts of a good Product Backlog structure

Identify when a requirement is Ready to be pulled into a Sprint

Identify when a requirement is Done and next backlog items can be pulled into the Sprint

● Create a value chain driven End-to-End picture for overall backlog prioritization

© Copyright. All rights reserved.

93

Unit 3: Creating Backlog

94

© Copyright. All rights reserved.

Unit 3
Lesson 1

Explore Phase Overview

LESSON OBJECTIVES
After completing this lesson, you will be able to:

● Structure the Explore phase

● Discover how the team will collect requirements and prioritize work

Story Map

Figure 83: Lessons Within Titles (Story Map)

Figure 84: Explore Phase Overview

© Copyright. All rights reserved.

95

Unit 3: Creating Backlog

Explore Phase Overview

Figure 85: Deploy with SAP Activate – Journey Overview and Key Milestones for Cloud Implementation

Let’s have a look again at the key activities in each SAP Activate project phase for cloud 
implementations.

The main purpose of the Explore phase is to perform a Fit-to-Standard Analysis to validate the 
solution functionality included in the project scope and to confirm that the business 
requirements can be satisfied. 

Identified deltas and configuration needs are validated by the product owner and, if approved, 
added to the Product Backlog to be implemented in the Realize phase. To collect the User 
Stories, in a Fit-to-Standard approach, the solution experts lead a series of structured show-
and-tell sessions. The goals of these workshops are to review with the Customer the SAP Best 
Practice or SAP standard functionalities, to identify delta requirements and to determine the 
configuration of the SAP Cloud solution.

Business Driven Configuration Questionnaires are available as accelerators in the SAP 
Roadmap Viewer to support the preparation of the Fit-to-Standard Analysis.

96

© Copyright. All rights reserved.

Lesson: Explore Phase Overview

Figure 86: Fit-to-Standard Execution – Overall Workshop Approach for Public Cloud Implementations

There are five steps in the Fit-to-Standard workshop execution that lead to the sixth one that 
is actually its ultimate objective – to enable the customer to execute the standard scenarios in 
the Starter System.

The preparation for the workshop is key for its success.

In the case of a public cloud implementation scenario, the preparation includes the customer 
self-enablement activities and the completion of the Business Driven Questionnaire for the 
business processes that are discussed in the workshop.

The demonstration of the process flows is done in the Starter System by an SAP Expert who 
is highlighting the areas that require configuration decisions. Standard process fit is 
discussed with the customer and identified requirements are collected in the Product 
Backlog. Some configuration decisions can be taken during the workshop itself or written 
down for further discussions and alignment. The customer has as the responsibility to provide 
value lists (for example, product group definition) and configuration values for Product 
Backlog refinement.

The workshops are time-boxed so that the entire functional scope can be reviewed and 
Product Backlog entries are created with a lower or higher level of additional information 
associated. The right level of refinement for the requirements in the Product Backlog is 
achieved through Backlog Refinement sessions in a just-in-time manner when making them 
ready them for Sprint execution.

The private Cloud has additional steps in the workshop as there's more flexibility in terms of 
enhancements possible for the standard – workflow, report, interfaces, conversions, 
enhancements and exits, and forms (WRICEF) requirements. So, Step 5 has, besides 
configuration, the identification of WRICEF type of work.

© Copyright. All rights reserved.

97

Unit 3: Creating Backlog

Figure 87: What Happens During Fit-to-Standard Analysis/Design?

*WRICEF objects and design documentation are more common in private cloud 
implementations. Public cloud offers less extensibility and fewer enhancements.

After Fit-to-Standard Analysis, the identified Product Backlog is prioritized, because there's a 
new series of time-boxed workshops that follows – the Design workshops. 

Product Owners are responsible for determining the top priority Product Backlog items using 
specific prioritization techniques and having the SAP Experts input in regards to functional 
and technical dependencies between backlog items. Only those top-priority requirements are 
scheduled for Design to make sure that the team has a refined backlog ready for the first 
couple of Sprints or more, depending on the allocated time for the workshops. These Design 
workshops are also used to have an agreement on the Design Decisions that will impact the 
Product Backlog implementation.

We can see that there are iterations marked for both types of Explore workshops, which 
means that teams are already working in Sprints to create the Product Backlog. The Explore 
Sprints are typically shorter than the Realize Sprints to allow quick adaptation and fast 
learning about Customer context, needs, and ways of working.

98

© Copyright. All rights reserved.

Lesson: Explore Phase Overview

Figure 88: Explore and Fit-to-Standard Sprint Cycle

Looking at the Explore Sprint events, we can see that that Fit-to-Standard workshop sessions 
can be organized as Sprint Reviews. The feedback from the Process Experts to the 
demonstrated SAP standards is captured in the User Story format as entries in the Product 
Backlog.

During the Sprint itself, all the activities revolve around the selected business processes and 
the preparation of the Starter System for the show and tell that's done in the Sprint Review. 

Sprint Review duration in Explore might take an entire day, much longer that the Sprint 
Review in Realize phase – not only because feedback is collected during the session but also 
so that the Agile team gets the needed clarity to move forward. SAP experts get clarity about 
the Customer needs, and Customers get clarity about SAP Standard capabilities.

The outcome of the Explore workshops resides in the Product Backlog that's created but also 
in the discussions, which generate shared understanding, aligning more and more the Agile 
team members towards the same goal. 

Through the Sprint Retrospectives Agile team:

● Develops a working model

● Gets more solid 

●

Identifies a common language and improves communication 

● Becomes more effective in applying the Agile process

© Copyright. All rights reserved.

99

Unit 3: Creating Backlog

Figure 89: Scrum Master/Agile Coach Role in Fit-to-Standard Workshop

The Scrum Master importance in an Agile project is paramount because of the services 
delivered by this role to the Product Owner and to the Scrum Teams.

Often the Scrum Master job is seen in relation with the scope size, and the budget for staffing 
Scrum Masters is saved for the Realization phase. This approach endangers the success of 
the Explore phase. Some of the possible effects are:

● Product Owner’s low performance in delivering responsibilities.

● Poor Product Backlog and Product Backlog prioritization, for example: Most of the Backlog 

Items are Must Have with no proper ranking.

● Extended duration for the Fit-to-Standard and/or Design period. Common root cause: 

Timeboxes are ignored or longer time for reporting and resolving impediment.

● Project and Teams not fully benefiting from the Agile process. Common cause: Roles 
aren’t fully understood, and the team needs practice before running a new process.

Figure 90: Solution Documentation (Process Design – Lean Approach)

100

© Copyright. All rights reserved.

Lesson: Explore Phase Overview

In Agile projects, teams no longer create large Design documents or Business Blueprints as 
waterfall-based projects created.

The figure, Solution Documentation (Process Design – Lean Approach), shows a collection or 
body of documents and objects (assigned to different levels of the process structure) that 
together make up the Design section of our Solution Information Assets held in the 
customer’s Solution Manager system for on-premise implementation.

Similar documentation structure can be achieved with SAP Cloud ALM for Cloud 
implementation projects.

Figure 91: Create Solution Documentation in SAP Cloud ALM

Process Documentation created during the Explore phase can be stored in SAP Cloud ALM 
linked with the documented process. 

There's an additional view in SAP Cloud ALM called Solution Process Traceability, which gives 
you a visual status of implementation progress at the process level.

Figure 92: Solution Documentation (SAP Cloud ALM Approach)

© Copyright. All rights reserved.

101

Unit 3: Creating Backlog

Looking at the Fit-to-Standard workshop from the input and output perspective we can turn 
them into checklists.

Depending on the implementation type, public/private cloud or on-premise, the input varies 
only for the system conversions, where we have as additional inputs:

● The simplification items resulted for the automatic assessment of the current solution 

implementation 

● The list of the already implemented changes to the SAP base solution (existing WRICEFs).

The output is always the same: the prioritized Product Backlog (from a business value 
perspective), the key decisions for solution Design, and, if time allows, the updated process 
diagrams to document the workshop agreements for business processes.

Figure 93: Fit-to-Standard Workshop Flow

LESSON SUMMARY
You should now be able to:

● Structure the Explore phase

● Discover how the team will collect requirements and prioritize work

102

© Copyright. All rights reserved.

Unit 3
Lesson 2

Creating Product Backlog

LESSON OBJECTIVES
After completing this lesson, you will be able to:

● Discover the value of effective Product Backlog management

●

●

Illustrate how to capture requirements in SAP projects

Identify the artefacts of a good Product Backlog structure

Story Map

Figure 94: Lessons Within Titles (Story Map)

© Copyright. All rights reserved.

103

Unit 3: Creating Backlog

Figure 95: Create Product Backlog

Create Product Backlog

Figure 96: Backlog: What It Is and What It's Not

The basis of any project involves requirements. Here we'll consider a company, which is 
transitioning to Agile, where Elaine works as a Scrum Master.

The main question is around the project requirements. From the individuals requesting 
project work to the individuals completing project work, the concern is that this is handled in 
the best way possible.

In Agile, this involves a Product Backlog. Elaine's goal is to help her team understand what a 
Product Backlog is and how it works.

An Agile backlog, commonly referred to as a Product Backlog, is the representation of work 
available for the team to take on next. This doesn't include the work on which the team is 
actively working. The work moves from the Product Backlog to the team's active work. The 
resulting active work status depends on the framework used to implement Agile.

The type of work in the Product Backlog could include project work items, bugs to be fixed, 
and technical tasks. Depending on the team's responsibilities, production support items could 
be included as well. These typically take the form of a User Story, which is a project work item 

104

© Copyright. All rights reserved.

Lesson: Creating Product Backlog

defined in terms of desired functionality for a specific user to reap a defined benefit. The 
Product Backlog items could take a different form, but the goal is to be concise and distinct 
from other work items.

Once Elaine has defined an Agile backlog, the next question is who's responsible for it. 
Because it primarily consists of the work needed to complete the project, the Product Owner, 
who represents the source of project work, owns the Product Backlog. This is a crucial 
responsibility, because the Product Backlog isn’t a static list of requirements but a grouping 
of work items that’s flexible and can be changed. This can occur at any time, because the 
work in a Product Backlog is what is to be delivered next and not what is currently being 
completed. It must be consistently prioritized and maintained.

These are the next things that Elaine reviews with her team.

Figure 97: Prioritize Backlog Based on Captured Requirements

The Product Backlog is a dynamic/iterative list of prioritized requirements. Details – which 
increase the level of clarity – vary based on the priority level of requirements and how close 
they are to be selected in the next Sprints to be implemented.

Prioritization means that requirements are ranked by Order and Level of Complexity/Size. 
Items with higher priority need to be fine-grained first, which means such Backlog items need 
to fit into a Sprint and can be realized by one team. Items with lower priority are more coarse-
grained and will be split in smaller, sprintable items later.

© Copyright. All rights reserved.

105

Unit 3: Creating Backlog

Figure 98: Example: Product Backlog

The example shows a Product Backlog that's maintained in an Excel file, is implemented by 
multiple Scrum teams, and has indications for its items about:

● The team responsible (for example, Sales 2, STO)

● Story Points estimated

● The ranking that each Backlog Item has in the Team Product Backlog

● The Sprint in which the Backlog Item is planned for implementation

Figure 99: Requirements Types

Requirements are Backlog Items with different levels of complexity, clarity, and detail.

Project work items in Agile that represent real (that is, actionable) project work take the form 
of User Stories, which are project requirements broken down into a smaller, more 
manageable form.

They're clearly described in one short sentence (User Story format) and are written to 
express a desired functionality and its associated benefit from an end-user's perspective.

106

© Copyright. All rights reserved.

Lesson: Creating Product Backlog

Figure 100: User Story Format – Capturing the Value Which the Requirements Attempts to Deliver

User Stories are a form of project requirements that detail the desired functionality for a 
specific user. They capture the value that the requirements attempt to deliver.

Agile projects propose an incremental and iterative approach. User Stories are an incremental 
approach in the sense that project requirements are broken down into aspects of 
functionality.

Agile is iterative in the sense that User Stories are completed with repeated cycles of 
development, testing, and reviewing known as Sprints.

User Stories are sourced by the stakeholders of the project. These are the people who have 
requested the project and will benefit from its success or suffer from its failure. They are 
representative of the end users who will use the functionality.

While many stakeholders are involved, the key stakeholder, known as the Product Owner, is 
responsible for the User Stories creation.

The Product Owner is accountable to the other stakeholders for the User Stories written and 
is responsible for reviewing them with the Development Team. The User Story purpose is 
simply to initiate conversation and collaboration.

User Stories contain just enough information to reach a common understanding. Once a 
common understanding is reached, the User Stories are discussed and further details are 
added so the implementation can be completed, with a just-in-time approach. This approach 
is extremely valuable because it elicits input from everyone involved in the process.

The first step in writing a User Story is to answer the question of who needs the functionality. 
This involves identifying the user or the role (called 'persona', Latin for 'character') that needs 
the functionality. It's important to be as specific as possible and to not use a generic user (for 
example, 'SAP user'). The reason for this is because the user is foundational to the User Story 
and influences the functionality.

For example, if the team is working on a website for a company to sell clothing, functionality 
for the customer might include security aspects to protect their private information. This part 
of the User Story is written, 'As a [role], ...'

The second step in writing a User Story is to answer the question of what functionality is 
needed. It's important to define the functionality or need. This is what's developed or created. 
From the clothing website example, functionality for a customer could include checking out as 
a guest. The functionality of the User Story is written, 'I want [what] ...'.

The third step is to ensure that a business value added is defined for the requirement, so as to 
weed out those requirements that have no clear benefit attached and also to set the scene for 
the acceptance of the user story. The benefit of the User Story is written, 'So that [benefit] ...'.

© Copyright. All rights reserved.

107

Unit 3: Creating Backlog

Figure 101: User Stories – Terminology and Level of Granularity

Project work in Agile takes the form of User Stories, which are project requirements broken 
down into smaller, more manageable forms.

They're high-level and brief, no more than a single sentence or two. Each User Story is written 
from the perspective of an end user to express desired functionality.

The basis of the User Story concept is directly related to the foundation of Agile.

Agile is founded on principles from the Agile Manifesto, which is a set of statements that 
describe the values of Agile. These include the following:

●

Individuals and interactions over processes and tools

● Working software over comprehensive documentation

● Customer collaboration over contract negotiation

● Responding to change over following a plan

Each aspect of the Manifesto is valuable but in circumstances where there are limitations and 
they aren’t all obtainable, some aspects are valued over others. The first two principles 
include individuals and interactions, as well as working software. These relate to the definition 
of User Stories. The end-user perspective directly aligns with individuals and interactions, and 
the desired functionality is representative of working software. The remaining aspects that 
are valued include customer collaboration and responding to change, which are related to 
how user stories are created.

108

© Copyright. All rights reserved.

Lesson: Creating Product Backlog

Figure 102: Solution Manager – User Stories Assigned to Solution Documentation

From a process modeling perspective, the decomposition of processes drives the 
identification of solution gaps. Functional gaps might occur on a process or process step 
level. From there, we conceptually jump into a visualization to drive the solution design. SAP 
Solution Manager and SAP Cloud ALM serve as a common repository.

An example of the structure Scenario → Process → Process step / Activity might be: Order to 
Cash → Sales Order Processing → Create Sales Order.

Figure 103: Terminology Mapping SAP Activate – SAP Solution Manager

In the figure, Terminology Mapping SAP Activate – Focus Build, we can see the mapping 
between the concept in SAP Activate and Focused Build solution for SAP Solution Manager.

For more information on Focused Build and SAP Cloud ALM, we recommend you review the 
following material, which gives the more details of SAP Activate, Focused Build, and SAP 
Cloud ALM.

© Copyright. All rights reserved.

109

Unit 3: Creating Backlog

Figure 104: Terminology Mapping SAP Activate – SAP Cloud ALM

In the figure, Terminology Mapping SAP Activate – SAP Cloud ALM, we can see the concepts 
utilized by both SAP Activate and SAP Cloud ALM.

Figure 105: Example: Capture User Story

The figure, Example: Capture User Story shows a sample User Story layout that can be 
created as a document or card.

SAP project-specific fields can be identified here beside the standard User Story elements:

● Headline to quickly identify the requirement in the Product Backlog,

● Functional area and process flow.

110

© Copyright. All rights reserved.

Lesson: Creating Product Backlog

Figure 106: Document Solution Process and Requirements (Epic) with SAP Cloud ALM

This figure shows how to document a solution process in the Process Authoring application 
that's delivered with SAP Cloud ALM.

Very often a requirement is associated with an SAP process and takes the form of an Epic in 
SAP Cloud ALM as its implementation requires a lot of work and can't be finished in a single 
Sprint.

Figure 107: Example: Write User Stories in User Story Format with SAP Cloud ALM

This figure shows the SAP Cloud ALM user interface to create a User Story. You can notice in 
the screen on the left that a User Story is connected to a Requirement/Epic and that 
requirement is associated to a process flow in the solution.

© Copyright. All rights reserved.

111

Unit 3: Creating Backlog

Figure 108: Example: Break Down User Stories into Subtasks with SAP Cloud ALM

This figure shows the SAP Cloud ALM user interface to break down User Stories into 
subtasks. User Stories can be broken down into subtasks and used for tracking 
completeness.

This is an optional activity for the Scrum teams, and it's part of the team agreements with 
regard with ways of working.

Figure 109: Nonfunctional Requirements (NFRs)

In the product Backlog, we can also capture the nonfunctional requirements, because these 
will also need to be planned, realized, and tested.

112

© Copyright. All rights reserved.

Lesson: Creating Product Backlog

Figure 110: Create Requirements Using Workstream and Process Assignment with SAP Cloud ALM

This figure shows the SAP Cloud ALM user interface to manage functional and nonfunctional 
requirements.

Only functional requirements are supposed to be linked to a solution process or to a process 
step. Categorization of requirements is possible so that they're easy to be identified and 
managed.

Figure 111: User Stories Splitting

A User Story should be assigned to a single Sprint.

Whenever the Development Team informs the Product Owner that the User Story is too big 
and can’t be built and tested in a single Sprint, this should be broken down into smaller User 
Stories that can be assigned to their respective Sprints.

© Copyright. All rights reserved.

113

Unit 3: Creating Backlog

Figure 112: How to Split WRICEF Requirements into Sprintable Pieces

Often team members don't see any options to split items. The figure, How to Split WRICEF 
Requirements into Sprintable Pieces, is a cheat sheet that provides good ideas on how to split 
Backlog Items in smaller pieces.

This cheat sheet will help to find the right direction to be able to split big requirements on the 
business scenario level into smaller requirements on the process step level.

Figure 113: Splitting

The INVEST acronym helps us to keep in mind all the characteristic of a good User Story.

A User Story should be independent, negotiable in terms of functionalities that are covered by 
a Story, valuable, estimable, small enough to be finalized in a Sprint, and testable. Therefore, 
there's a need for splitting and making it smaller while also keeping in mind the other INVEST 
elements.

The image Splitting as well as the links below give us more guidance on how to reach a finer 
level of granularity for our User Stories.

114

© Copyright. All rights reserved.

http://agileforall.com/resources/how-to-split-a-user-story/

http://agileforall.com/wp-content/uploads/2009/10/Story-Splitting-Cheat-Sheet.pdf

Lesson: Creating Product Backlog

Figure 114: User Story Mapping: Keep the Big Picture in Mind

Remember that Requirements are large User Stories, very often not possible to be delivered 
in a single Sprint. We can also call them Epics.

In an SAP implementation project, during the Explore phase, we collect User Stories. We do 
that process-by-process during Fit-to-Standard workshops.

The User Story Mapping is a technique that shows us the big picture of the User Stories, 
which are identified for a user journey that at SAP are called business processes and 
scenarios.

The Business Process Map is enriched with the User Stories identified for the processes in 
that map, providing, like in camera lenses, zoom-in and zoom-out capabilities for the solution 
implementation scope.

The User Story Mapping technique helps the Agile Team to prioritize User Stories, to identify 
the minimum viable product, and enables the Release and Sprint planning.

Figure 115: Story Mapping Process Explained

In the figure, Story Mapping Process, we can see the structure of the User Story Map. The 
columns reflect how product goals contribute to the delivery of the overall product goal.

© Copyright. All rights reserved.

115

Unit 3: Creating Backlog

The first row of features (A1, B1, D1) describes the baseline or necessary features of the 
respective product goal. Together, these features are a marketable feature set or the 
minimum viable product (MVP).

As we have more features added to develop each product goal, we add these to the respective 
columns. Looking at any one product column, we can see an increasing level of features in the 
product.

In each column, the features supporting the same product goal are ordered by category: The 
absolutely necessary, bare minimal features that allow the achievement of the goal are placed 
on top of the column, followed by features that are giving alternatives to the user, then 
flexibility, intelligence, performance, comfort, and luxury.

Figure 116: Story Mapping for SAP

Following the User Story Map structure of the previous figure, we have the overall goal of a 
scenario and each product goal is a process within that scenario.

The baseline functionality forms the first row of features and is the 'walking skeleton' or the 
minimum viable product (MVP). The additional features represented by the remaining user 
stories lead to a fully featured scenario and set of processes.

Figure 117: Process Flow Diagram

116

© Copyright. All rights reserved.

Lesson: Creating Product Backlog

This process flow diagram shows processes A and B:

● Process A = Inbound Email

● Process B = Sales Inbound Call

Figure 118: Process Flow Diagram

This process flow diagram shows processes C and D:

● Process C = Marketing Inbound Call

● Process D = Marketing Outbound Call

Figure 119: Story Mapping for SAP

In the figure, Story Mapping for SAP, in the top-left corner we can see the overall goal. We also 
see the four processes covered on the last two figures:

● Process A = Inbound Email

© Copyright. All rights reserved.

117

Unit 3: Creating Backlog

● Process B = Sales Inbound Call

● Process C = Marketing Inbound Call

● Process D = Marketing Outbound Call

We'll then look at process B (highlighted).

Figure 120: Double-Clicked into the Service Inbound Call Process

The top (purple) row now shows the Steps of Process B (Sales Inbound Call).

The rest of the story map shows a numbered feature of each step. In this example, there are 
no additional features required for the second and third steps to make the next feature level 
beyond the first feature set (row).

Figure 121: Diving into the Service Inbound Call Process

In the figure, Diving into the Service Inbound Call Process, the names of some of the features 
on the second row help you understand the approach and read the feature sets in the walking 
skeleton (or minimum viable product). Additional feature sets are shown below as other rows.

118

© Copyright. All rights reserved.

Lesson: Creating Product Backlog

Figure 122: Product Backlog in SAP Cloud ALM

SAP Cloud ALM is where the User Story Map can be stored.

Please keep in mind that the User Story Map is a living artifact, as new User Stories (product 
features) can be identified and all remaining, not implemented User Stories in the Backlog 
have to be reviewed for prioritization and ranking purposes.

Figure 123: Prioritize the Backlog

Where SAP Cloud ALM has been chosen, we can use entries in the Requirement to 
automatically sequence the requirements by Priority. User Story points and Effort 
information can be also stored in the tool.

If SAP Focused Build or SAP Cloud ALM are not being used, use the Priority Category and 
Priority Rank columns in the Project Backlog spreadsheet to prioritize and sequence the 
requirements.

© Copyright. All rights reserved.

119

Unit 3: Creating Backlog

Figure 124: Ways to Establish Priorities

In the figure, Ways to Establish Priorities, we learn the core prioritization techniques.

Other approaches include MoSCoW, where we assign one of the following properties to a User 
Story:

● Must have (defines the minimum set of features of the walking skeleton)

● Should have (high priority)

● Could have (Desired but not necessary)

● Would have (can be delayed for future release)

Then rank all the user stories within a priority.

We can then sequence the stories by priority and rank within the priority to get a sequence 
where no two stories have equal priority.

Figure 125: Factors for Prioritization – Business Value Versus Risk

User Stories and Epics can be depicted depending on their risk level and value proposition.

Start with high risk and high value Epics in order to deliver value as early as possible and 
address risks and uncertainty.

Continue with Epics which have high value, but lower risk.

Do Epics with little value and little risk last.

If possible, avoid Epics that have high risks but offer little value/

120

© Copyright. All rights reserved.

Lesson: Creating Product Backlog

Figure 126: Factors for Prioritization – Gaining New Knowledge

Some User Stories might be valuable, not directly for the end-user, but for the company 
developing the product to eliminate the incertitude about the value of certain product 
features.

In this case, the most basic functionality (the MVP) of that feature is getting a 'discovery high 
business value' in the sense that, once live, that MVP gives the desired information about its 
usefulness and value in front of the end-users. This is preventing investments in low value 
functionalities.

In some other situations, the team doesn't know how the functionality can be implemented, 
so there's a discovery value in first elaborating a proof of concept or a study that will bring 
additional information on the how.

In Agile, this uncertainty is addressed simultaneously by assessing the discovery value as a 
component of the business value for each Backlog Item.

Figure 127: Why Prioritization and Ranking Is Important

© Copyright. All rights reserved.

121

Unit 3: Creating Backlog

Figure 128: Scaling Agile – Shared Understanding and Alignment

The above visualization showcases the importance of transparency and communication, 
specifically in large Agile projects.

The main goal during the Explore phase is to have a common understanding on the 
requirements and Backlog across the teams/workstreams.

Figure 129: Scaling Agile – Overall Backlog Refinement and Requirement Flow 

The overall Backlog is the single source of truth for the project.

It is essential to build an overall Product Backlog right from the beginning as soon as the first 
fit-to-standard workshops have been started and first requirements have been captured.

The refinement on the overall Backlog is the responsibility of the Chief Product Owner 
together with the respective Product Owners.

In order to get a requirement into the next level, it's recommended to exchange and be 
aligned on the following items – this also helps to come up with a good ranked Initial Product 
Backlog at the end of the Explore Phase:

122

© Copyright. All rights reserved.

Lesson: Creating Product Backlog

● Dependencies

● Assumptions

● Out-of-Scope aspects

● Risks (focus on business and market-view)

● Aspirations

● General requirements and remarks

● Negotiated agreement between parties

● Constraints (effectiveness/efficiency requirements)

● Artifacts and delivery-formats

● Exit criteria (for example, sunk cost; opportunity deadline)

Figure 130: Scaling Agile – Overall Product Backlog

Preallocation of the Backlog Items to the Scrum Teams can be done by a Core Team that is 
focusing on planning activities BUT the finalization of the Release Planning is done by the 
Scrum Teams.

Prioritization is done using the same priority value set (for example, MoSCoW) for all the 
Scrum Teams and the same priority ranks within the priorities.

Cross Workstream Collaboration:

● During the Explore phase, start working in a scaled Agile environment.

● Reinforce Agile structures across workstreams.

● The goal is to have a prioritized overall Project Backlog aligned across the workstreams.

● Focus on visualizing an end-to-end value chain driven flow and prioritize the backlog 

accordingly.

● Regularly refine and align as follows:

- On cross dependencies across workstreams and requirements

- On risks (pain points)

- Reserve enough time and establish a Risk Roaming meeting

© Copyright. All rights reserved.

123

Unit 3: Creating Backlog

Figure 131: Scaling – Establish Risk ROAMing Process in the Project

Dependencies are an important aspect to manage when working with multiple teams to 
develop or implement the same Product Backlog. Work to be done by a Scrum Team depends 
on a work to be finished by another team. During the Release Planning, all the teams are 
identifying dependencies and are sequencing the work so that blockers and bottlenecks are 
prevented. Nevertheless, the workload estimates are simple predictions that might be 
invalidated by the reality of the Realization phase.

Dependencies are one of the main sources for the project risks, but we can foresee 
technology risks, market risks, operational risks and many others.

When planning the release, we must identify the risks that could occur and decide the team's 
response to these risks.

The ROAM model breaks down the risk into four categories, Resolved, Owned, Accepted, and 
Mitigated, and allows teams to decide on what risks are worth working on, and who is focused 
on dealing with these risks.

124

© Copyright. All rights reserved.

Unit 3
Exercise 7

Case Study: User Story Map

1. Each team creates its own Story Map based on a sales process step example.

● Mobile App: Sales Order Process with SAP Fiori

● Telesales: Telephone Inbound Sales Process

● Webshop: SAP Commerce Cloud Customer Experience Webshop

2. Define the basic process steps and put those on top of your story map.

Use a whiteboard, sticky notes, and a thick pen.

© Copyright. All rights reserved.

125

Unit 3
Solution 7

Case Study: User Story Map

1. Each team creates its own Story Map based on a sales process step example.

● Mobile App: Sales Order Process with SAP Fiori

● Telesales: Telephone Inbound Sales Process

● Webshop: SAP Commerce Cloud Customer Experience Webshop

2. Define the basic process steps and put those on top of your story map.

Use a whiteboard, sticky notes, and a thick pen.

a)

126

© Copyright. All rights reserved.

Unit 3
Exercise 8

Case Study: Create User Stories

Goal: Define a set of user stories and assign them to the story map.

● Mobile App: Sales Order Process with SAP Fiori

● Telesales: Telephone Inbound Sales Process

● Webshop: Hybris Customer Experience Webshop

1. Define the user stories (Each requirement on a separate sticky note. Use a thick pen.).

2. Put the user stories under the process steps on your story map.

Remember, the ultimate goal of this exercise is for you to live and practice the Scrum 
processes, not to create the perfect solution!

© Copyright. All rights reserved.

127

Unit 3
Solution 8

Case Study: Create User Stories

Goal: Define a set of user stories and assign them to the story map.

● Mobile App: Sales Order Process with SAP Fiori

● Telesales: Telephone Inbound Sales Process

● Webshop: Hybris Customer Experience Webshop

1. Define the user stories (Each requirement on a separate sticky note. Use a thick pen.).

2. Put the user stories under the process steps on your story map.

Remember, the ultimate goal of this exercise is for you to live and practice the Scrum 
processes, not to create the perfect solution!

128

© Copyright. All rights reserved.

Unit 3
Exercise 9

Case Study: Rank User Stories and Define 
Releases

In this exercise, the goal is to rank user stories according to priority.

1. Discuss what you want to prioritize (such as business value, risks, and so on.).

2. Sort your user stories for each column of your Story Map.

3. Define your first release (Walking Skeleton).

Team advises but Product Owner will make final decision.

4. Product Owner explains the first feature set per team to the Chief Product Owner.

© Copyright. All rights reserved.

129

Unit 3
Solution 9

Case Study: Rank User Stories and Define 
Releases

In this exercise, the goal is to rank user stories according to priority.

1. Discuss what you want to prioritize (such as business value, risks, and so on.).

2. Sort your user stories for each column of your Story Map.

3. Define your first release (Walking Skeleton).

Team advises but Product Owner will make final decision.

4. Product Owner explains the first feature set per team to the Chief Product Owner.

130

© Copyright. All rights reserved.

Lesson: Creating Product Backlog

LESSON SUMMARY
You should now be able to:

● Discover the value of effective Product Backlog management

●

●

Illustrate how to capture requirements in SAP projects

Identify the artefacts of a good Product Backlog structure

© Copyright. All rights reserved.

131

Unit 3
Lesson 3

Analyzing the Definitions of Ready and Done

LESSON OBJECTIVES
After completing this lesson, you will be able to:

●

●

Identify when a requirement is Ready to be pulled into a Sprint

Identify when a requirement is Done and next backlog items can be pulled into the Sprint

● Create a value chain driven End-to-End picture for overall backlog prioritization

Story Map

Figure 132: Lessons Within Titles (Story Map)

132

© Copyright. All rights reserved.

Lesson: Analyzing the Definitions of Ready and Done

Figure 133: Definition of Done (New)

Definition of Ready and Done

Figure 134: Teams Need a Common Understanding When a Requirement Is Ready and Done

Definitions must be very clear in a professional context.

Ready and Done are concepts with which most people think they're familiar from daily life, but 
there's a concrete risk of ambiguity if what is really meant isn't properly spelled out.

Think of how often you've heard someone say that something is done, but when you look 
more closely it isn't really done? A child stating they're done cleaning their room, but there are 
still a few socks under the bed. Or a student saying their science project is done, but they still 
need to put together the binder that contains all the information on the experiment. This can 
also happen in business contexts.

Agile software development is a way of developing software that focuses on producing small 
pieces of functionality at a quick pace and with frequent customer feedback. This is different 
from traditional development methods that could leave a team spending months working on a 
big application, only to learn that what they built wasn't really what the customer wanted.

© Copyright. All rights reserved.

133

Unit 3: Creating Backlog

Hence, definition of Ready (DoR) and of Done (DoD) must be agreed upon and be clear and 
exact – as well as related to the Agile framework. Ideally, they should be so clear that there's 
never any argument about them during execution.

This lesson will explain why a definition of Done is important and provide a model you can 
follow to prepare your own DoD.

Keep in mind that one team's DoD will be unique to that team's circumstances and type of 
work. This lesson presents examples, not strict instructions that every team must follow to 
the letter.

Figure 135: How DoR, Acceptance Criteria, and DoD Are Related to Each Other

In this figure, how DoR, Acceptance Criteria, and DoD interrelate to one another is shown.

It should be noted that, unlike the definitions, the Acceptance Criteria are item-specific.

Figure 136: Backlog Refinement Meeting

The team needs to have user stories in status Ready to be worked upon. The sprint velocity 
wouldn’t be good if the user stories weren’t Ready – that is, if they were to be converted to 
Ready during the sprint itself.

134

© Copyright. All rights reserved.

Lesson: Analyzing the Definitions of Ready and Done

Figure 137: Definition of Ready (DoR) – Implications

The project must have a steady number of User Stories with enough details so as to be 
processed.

This implies that some of the time needs to be reserved for getting User Stories from their 
original, often draft status, to the status of Ready – so that team's time can be put to 
proficient use.

Figure 138: Example: Definition of Ready

This is an example definition of Ready – which can be customized for the local project 
terminology and Project Manager's expectations.

Figure 139: Example: Definition of Done

© Copyright. All rights reserved.

135

Unit 3: Creating Backlog

This is an example definition of Done. This can be customized. For example, you can be 
specific about the status of documents and visibility of objects in SAP Solution Manager or 
SAP Cloud ALM that you want to see.

Figure 140: Example: Definition of Shippable

This is another sample definition for the term Shippable.

Please review the first slide in this lesson again to ensure that you now have a good 
understanding of Ready, Done, and Shippable and the differences between these three 
statuses.

136

© Copyright. All rights reserved.

Unit 3
Exercise 10

Case Study: Definition of Ready and Done

1. Define in your team the Definition of Ready and Done. Document the definitions on a 

flipchart.

2. Inspect the first user stories of your backlog, and check if the user stories are ready as set 

out in your definition.

3. Define acceptance criteria of user stories on the back of the card.

© Copyright. All rights reserved.

137

Unit 3
Solution 10

Case Study: Definition of Ready and Done

1. Define in your team the Definition of Ready and Done. Document the definitions on a 

flipchart.

2. Inspect the first user stories of your backlog, and check if the user stories are ready as set 

out in your definition.

3. Define acceptance criteria of user stories on the back of the card.

138

© Copyright. All rights reserved.

Lesson: Analyzing the Definitions of Ready and Done

LESSON SUMMARY
You should now be able to:

●

●

Identify when a requirement is Ready to be pulled into a Sprint

Identify when a requirement is Done and next backlog items can be pulled into the Sprint

● Create a value chain driven End-to-End picture for overall backlog prioritization

© Copyright. All rights reserved.

139

Unit 3: Creating Backlog

140

© Copyright. All rights reserved.

Unit 3

Learning Assessment

1. The main purpose of the Explore phase is to perform a Fit-to-Standard Analysis to validate 
the solution functionality included in the project scope and to confirm that the business 
requirements can be satisfied.

Determine whether this statement is true or false.

X True

X False

2. Which of the following dimensions need to be considered during prioritization?

Choose the correct answers.

X A Importance

X B Scaling

X C Integration

3.

 A definition of Ready signifies that a User Story has been completed.

Determine whether this statement is true or false.

X True

X False

4. Regarding user stories and releases, which of the following statements are correct?

Choose the correct answers.

X A  A User Story is a tool used in Agile software development to capture a description 
of a software feature from an end-user perspective. The User Story describes the 
type of user, what they want, and why.

X B A User Story helps to create a simplified description of a requirement.

X C A release is a deployable software package that is the culmination of several 

iterations. Releases can be made before the end of an iteration.

© Copyright. All rights reserved.

141

Unit 3: Learning Assessment

5. A User Story map arranges user stories into a useful model to help understand the 

functionality of the system, identify holes and omissions in your backlog, and effectively 
plan holistic releases that deliver value to users and business with each release.

Determine whether this statement is true or false.

X True

X False

142

© Copyright. All rights reserved.

UNIT 4 Illustrating Iterative Build

Lesson 1

Analyzing Release Planning

Exercise 11: Case Study: Estimate User Stories

Lesson 2

Illustrating the Release Planning in a Scaled Environment

Exercise 12: Case Study: Release Planning with two Scrum Teams

Lesson 3

Designing Sprint Cycle

Exercise 13: Case Study: Daily Stand Up

Lesson 4

Analyzing Testing and Deploy

144

157

160

165

168

183

187

UNIT OBJECTIVES

● Plan Sprints for a Release

● Discover the estimation process

● Plan multiple releases in Agile project

● Plan Release in a Scaled Environment

● Describe how to run Realize phase in iterations

●

Identify when we take a User Story into a Sprint and illustrate how we measure its 
completion

● Outline what is expected from team members during the Sprint

●

Identify the test activities involved in an Agile project

● Understand how Agile Sprints may be used with Cutover tasks

● Discover how Agile Sprints may be used with Cutover tasks

© Copyright. All rights reserved.

143

Unit 4
Lesson 1

Analyzing Release Planning

LESSON OBJECTIVES
After completing this lesson, you will be able to:

● Plan Sprints for a Release

● Discover the estimation process

● Plan multiple releases in Agile project

Story Map

Figure 141: Lessons Within Titles (Story Map)

144

© Copyright. All rights reserved.

Lesson: Analyzing Release Planning

Figure 142: Release Planning

Release Planning

Traditional Versus Agile Approach in Project Management

Figure 143: Traditional Versus Agile Approach in Project Management

If we talk about release management in an Agile project, we need to first distinguish between 
the traditional Waterfall and modern Agile approach.

While in the traditional approach (Plan-Driven), requirements are usually fixed and clear in 
scope (in theory). Resources and time are estimated based on the scope. If those estimations 
are wrong, you need to either add resources or to delay the delivery. Both are having an 
impact on the project's overall costs, leading to a more difficult project control.

In the Agile approach this turns upside down (Value Driven). Resources and timeline are fixed 
(meaning costs are fixed) but the requirements can vary as we follow the Design to Budget 
approach, looking into pure value delivery. If the deadline is reached, or budget is used, the 
customer will decide to continue or not based on the outstanding value versus costs.

© Copyright. All rights reserved.

145

Unit 4: Illustrating Iterative Build

Video: Distinguishing Between Traditional and Agile Approach in Project 
Management

For more information on Distinguishing Between Traditional and Agile Approach 
in Project Management, please view the video in the lesson Analyzing Release 
Planning in your online course.

Keep in mind that this is a project view. If it comes to product development, all three can vary.

Understanding the difference brings us to the point that a Release in the traditional approach 
is fixed in terms of scope, and usually in time too, but could be shifted if necessary.

In the Agile approach, you fix the Release, but you're not fully sure yet about what will be 
released, as needs and complexity can change. Over time, the better teams can predict, the 
clearer your Release will be, but still it can change based on requirements.

The Value-Driven approach puts the focus on the Customer success.

The Plan-Driven approach puts the focus on the Project success.

Figure 144: Release Planning

Starting to plan a Release, several pieces of information are needed. The Sprint length has to 
be clear to schedule potential Releases.

Furthermore, the Initial Backlog has to be built up, on which the teams can then perform a 
first high level estimation and prediction to get a first view on what could be delivered in which 
time frame.

Therefore, the Scrum Team needs a first understanding of their velocity (speed). The Product 
Owner needs to decide what the minimal viable product is supposed to be in order to be 
released. At the beginning, this is all a bit vague and only estimated, but it will become more 
precise over time. Nevertheless, the expertise of the SAP consultants helps to have a good 
first estimation.

146

© Copyright. All rights reserved.

Lesson: Analyzing Release Planning

Figure 145: Initial Product Backlog Definition

The Product Owner is the responsible and accountable person for the Backlog and, therefore, 
the person building up the Initial Backlog with the team.

The prioritization is done by the Product Owner and supported by the Development Team to 
be able to decide about release content.

A clear understanding of 'How to demo' is important as this will lead to clear acceptance 
criteria for each requirement and User Story needed to rate and justify if the delivery is as 
expected.

For SAP implementation projects, keep in mind that Requirements will be split into pure 
configuration items and WRICEF objects, which represent developments on the standard 
solution.

For Public Cloud solutions, the Product Backlog will include mostly configuration items, as 
WRICEF developments are specific to managed cloud an on-premise implementations.

Figure 146: Prioritize the Product Backlog – Responsible: Process Owner

Prioritization is key to telling the teams what they should focus on and also to decide what 
matters for the Release.

Based on business priorities and complexities, the Product Owner prioritizes the Backlog.

© Copyright. All rights reserved.

147

Unit 4: Illustrating Iterative Build

There are various methods to do that. The most simple one we use in SAP Activate is the 
Must-Have, Should-Have, Could-Have, Would-Have (MSCW) rule.

In this case, we're not yet talking about the single User Stories that are pulled by the team, but 
initially about the high-level requirements first that will be split into User Stories over time and 
prioritized again.

First, you rate the requirements with the MSCW rule. This will lead to multiple requirements 
with the same ranking. As no item is allowed to have the same priority, as you have to be able 
to choose in bottleneck situations, you're going to rerank within those groups as in the figure 
above.

This process must be done for all requirements in your Initial Backlog and it provides a very 
good understanding of what is needed and what isn’t.

Figure 147: Prioritize Project Backlog: User Story Mapping as Prioritization Technique

Besides the flat backlog view, which is simply a list from top to bottom, remember the User 
Story Mapping. Visualizing your requirements from an end-to-end perspective, starting from 
your Business Process Maps, will simplify your decision about priorities. The Story Map may 
not only be used to define what goes into which Sprint but can also be used to visualize the 
priorities, which will then be transferred into the Product Backlog. This way your Story Map 
will drive your Release planning.

148

© Copyright. All rights reserved.

Lesson: Analyzing Release Planning

Figure 148: Analysis of Technical Dependencies – Responsible: Implementation Team

When it comes to Product Backlog creation and prioritization, you need to be aware that 
besides the business requirements, IT does have some needs in order to be able to deliver the 
business needs.

Those are usually technical enablers and can be cross-functional requirements. Therefore, 
the Product Owner needs to work closely together with the Development Team to understand 
those prerequisites, which will lead to possible priority changes.

Figure 149: Analysis of Technical Dependencies: Technical Prerequisites and Dependencies

Finally, dependencies of any kind (business, technical) are to be considered too. An item 
might be of top priority, delivering a lot of value, but can only be implemented when other 
items (for example, Masterdata, APIs, and so on) are already implemented. There are not only 
dependencies within your project, which are easier to negotiate, but there will be 
dependencies to other teams and departments outside the project, who are following their 
own schedule.

Making dependencies transparent it will lead to a different prioritization.

© Copyright. All rights reserved.

149

Unit 4: Illustrating Iterative Build

Figure 150: Agile Estimation Techniques – Responsible: Implementation Team

If all information is gathered and understood, the teams have to start initially rating the 
complexity of each single requirement to provide a first indication for the release plan and 
required budget. There are two known approaches:

● The traditional – person days. The team usually has a good understanding and experience 
of how long single items will take. Nevertheless, this rating is a net rating. The teams have 
to consider that a typical developer/implementer can concentrate on the work for 4–6 
hours. The rest is administration and backlog support for the Product Owner.

● The second approach – Story Points – is a relative rating based on complexity. By using 
story points, the teams aren't biased by days, but will rate their understanding of how 
complex the item might be. Over time, the team develops a good understanding of its 
velocity, telling the team how many story points they can deliver within a Sprint.

Each team does have its own complex understanding of its items and can’t be directly 
compared. But the trends and speed are quantifiable and comparable.

Figure 151: Estimating Stories

Those four questions will help the team to do their rating.

150

© Copyright. All rights reserved.

Lesson: Analyzing Release Planning

Figure 152: Estimate Project Backlog 

Estimation does include everything (for example, testing, documenting). Therefore, the team 
must understand the definitions of Done to count them in.

Figure 153: Estimate Project Backlog: Estimation with Planning Poker

Planning Poker may be used to help show individual thinking on estimates and arrive at a 
consensus. The figure, Estimate Project Backlog: Estimation with Planning Poker, includes 
this summarized approach:

● Each estimator selects a set of cards (or you agree to use the Planning Poker app on your 

mobile phone).

● The Product Owner or customer reads the item to be estimated.

● The item is discussed.

● Each estimator privately selects a card representing their estimate. The card isn’t shown 

to other estimators.

© Copyright. All rights reserved.

151

Unit 4: Illustrating Iterative Build

● Once each estimator has selected a card, all cards are turned over at the same time.

●

●

If everyone played the same card, this is the estimate.

If estimates aren't the same, the group discusses the estimates, focusing on any outlying 
values.

● Repeat until estimates converge.

● The Scrum Master decides when to stop the reestimation rounds if the estimations aren't 
converging. Additional Backlog Refinement meetings need to be scheduled to clarify the 
requirements for which the estimations aren’t converging.

Figure 154: Estimate Project Backlog: How to Use Planning Poker for SAP?

Straight Planning Poker is best done when team members have a similar background and 
understand each other. If this isn't the case, discussions might take longer to gain consensus, 
and good facilitation from a Coach or a Scrum Master is required.

When in situation 2, where those estimating have different backgrounds and cannot judge 
estimations of each other, we can adapt the Planning Poker approach as mentioned in the 
figure.

This little change ensures that team members aren’t influencing each other, trying to hide a 
lack of knowledge or following the experts or more extroverted members.

Figure 155: Estimate Project Backlog: How to Use Planning Poker with a Twist? (1)

The figure, Estimate Project Backlog: How to use Planning Poker with a Twist? Steps 1 and 2, 
and the next figure show an example, in four stages, of Planning Poker where team members 
have different backgrounds.

152

© Copyright. All rights reserved.

Lesson: Analyzing Release Planning

The expert's estimate mustn't influence the initial estimate of the other team members and, 
therefore, doesn’t show their rating before the others do.

● Each estimator selects a set of cards.

● The Product Owner or customer reads the item to be estimated.

● The item is discussed.

● Each estimator privately selects a card representing their estimate. The card isn’t shown 

to other estimators.

● Once each estimator has selected a card, all cards are turned over at the same time except 
the expert's card. The expert waits to show his card until all other cards are turned over.

●

●

If everyone played the same card, that's the estimate.

If estimates aren't the same, the group discusses the estimates, focusing on any outlying 
values and understanding the reasoning behind each other's estimate. Then, the expert 
explains their estimate incorporating any insights gained from the previous discussion.

● Repeat until estimates converge.

Figure 156: Estimate Product Backlog: How to use Planning Poker with a Twist? (2)

Figure 157: Agile Estimation Tips and Tricks

© Copyright. All rights reserved.

153

Unit 4: Illustrating Iterative Build

Estimation isn't something easy, specifically when the team didn't yet work together and 
doesn't know the customer well yet. This figure does provide some tips and tricks for making 
the estimation easier.

Figure 158: Complete Release Planning

This figure shows how the velocity of a team is calculated. Teams will be slower at the 
beginning, speeding up over time. The velocity is the average of story points delivered in the 
last Sprints. If the team estimated the first time, they'll have to create and use reference 
stories to gain a first understanding of complexity and, finally, of their potential velocity.

Figure 159: Complete Release Planning

Finally, the requirements are in the Backlog, have been ranked and estimated, and can 
already be distributed over Sprints or Waves. With that, the Product Owner can define and 
estimate the deliveries for the first Release. Remember, priorities can change. Also, not all 
details are known yet but will be worked out during the refinement session.

154

© Copyright. All rights reserved.

Lesson: Analyzing Release Planning

Figure 160: Release Planning Result

As a result of the Product Backlog estimation, we'll have a prioritized, ranked, and estimated 
backlog that's ready for the first Release planning. We'll attempt to foresee, based on the 
information that we have, which User Story is possible to deliver in which Sprint and by which 
team, if we're in a scaled Agile environment.

Note:
This initial plan will be revisited, ideally after each Sprint, to incorporate the 
learnings from the previous iterations and to reevaluate its feasibility.

© Copyright. All rights reserved.

155

Unit 4: Illustrating Iterative Build

156

© Copyright. All rights reserved.

Unit 4
Exercise 11

Case Study: Estimate User Stories

1. Set an anchor point.

Pick the smallest relevant story, and give it one story point.

Hint:
One story point = One ideal person day

2. Play Planning Poker and estimate relative size of other stories.

3. Discuss outliers, and vote again until all numbers are within three cards.

© Copyright. All rights reserved.

157

Unit 4
Solution 11

Case Study: Estimate User Stories

1. Set an anchor point.

Pick the smallest relevant story, and give it one story point.

Hint:
One story point = One ideal person day

2. Play Planning Poker and estimate relative size of other stories.

3. Discuss outliers, and vote again until all numbers are within three cards.

158

© Copyright. All rights reserved.

Lesson: Analyzing Release Planning

LESSON SUMMARY
You should now be able to:

● Plan Sprints for a Release

● Discover the estimation process

● Plan multiple releases in Agile project

© Copyright. All rights reserved.

159

Unit 4
Lesson 2

Illustrating the Release Planning in a Scaled 
Environment

LESSON OBJECTIVES
After completing this lesson, you will be able to:

● Plan Release in a Scaled Environment

Release Planning in a Scaled Environment

Figure 161: Scaling Agile – Overall Product Backlog

In an SAP Project, the implementation usually consists of multiple teams. The Product 
Backlog is valid for the whole project, but each team will need their backlog. In this case, use a 
Program Backlog, which represents the requirements or the Epics of the project. Each 
Product Owner splits those items into Scrum Team Backlogs, considering the features they 
need to deliver to satisfy the overlaying requirement or Epic. As shown in the figure, multiple 
Product Owners and teams might play on the same Epics and might even have dependencies 
on each other to be discussed, planned, and solved.

160

© Copyright. All rights reserved.

Lesson: Illustrating the Release Planning in a Scaled Environment

Figure 162: Analysis of Technical and Functional Dependencies

Figure 163: U4L2

Figure 164: Estimate the Product Backlog in a Scaled Environment

© Copyright. All rights reserved.

161

Unit 4: Illustrating Iterative Build

Figure 165: What Will Be Shipped in the Release?

Figure 166: Decide on the Sprint Length

Figure 167: Estimate Initial Velocity

Figure 168: Finalize Release Plan

162

© Copyright. All rights reserved.

Lesson: Illustrating the Release Planning in a Scaled Environment

Figure 169: Finalize Release Plan – Complex Epic Planning Example

Epic/Process A corresponds to a customer-specific end-to-end business flow for which 
multiple requirements, materialized as Backlog items, were identified during the Explore 
phase.

Because Epic/Process A is very complex and/or requires skills specific to several Scrum 
Teams, it's split into:

● User Story A1 going to Procure to Pay Scrum Team (for example, Configuration)

● User Story A2 going to Order to Cash Scrum Team (for example, Enhancement)

● User Story A3 going respectively to Record to Report Scrum Team (for example, 

Configuration)

Epic/Process B corresponds to another customer-specific end-to-end business flow for 
which multiple requirements, materialized as Backlog items, were identified during the 
Explore phase.

Epic/Process B is also very complex and has many requirements identified, but all the 
required skills to implement this feature are available inside the Procure to Pay Scrum Team. 
During the Backlog refinement session, the Scrum Team splits it into:

● User Story B1 that will be implemented during Sprint 1

● User Story B2 that will be implemented during Sprint 2

Epic/Process B will be completed only in Sprint 2

Figure 170: Release Planning with Multiple Scrum Teams

© Copyright. All rights reserved.

163

Unit 4: Illustrating Iterative Build

164

© Copyright. All rights reserved.

Unit 4
Exercise 12

Case Study: Release Planning with two Scrum 
Teams

Plan the release. Take the following criteria into account:

Today is January 1st.

Total estimated number of person-days for the first release: (old: 176); new 426, which will be 
delivered by two Scrum Teams.

The backlog allocated for the first Scrum team values 176 person-days and the backlog 
allocated to the second Scrum Team values 250 person days.

Sprint length: 4 weeks

Estimated initial velocity for Scrum Team 1 : See previous exercise. (40 person days)

Estimated initial velocity for Scrum Team 2 : 60 person-days per Sprint.

Add one Sprint for integration testing and one Sprint for final preparation before go-live.

Assume that you will not reach your full velocity in the first two Sprints

Deduct 40% of the initial velocity of the first Sprint for both Scrum teams.

Deduct 20% of the initial velocity of the second Sprint for both Scrum teams.

1. When will your project be ready for the go-live ?

© Copyright. All rights reserved.

165

Unit 4
Solution 12

Case Study: Release Planning with two Scrum 
Teams

Plan the release. Take the following criteria into account:

Today is January 1st.

Total estimated number of person-days for the first release: (old: 176); new 426, which will be 
delivered by two Scrum Teams.

The backlog allocated for the first Scrum team values 176 person-days and the backlog 
allocated to the second Scrum Team values 250 person days.

Sprint length: 4 weeks

Estimated initial velocity for Scrum Team 1 : See previous exercise. (40 person days)

Estimated initial velocity for Scrum Team 2 : 60 person-days per Sprint.

Add one Sprint for integration testing and one Sprint for final preparation before go-live.

Assume that you will not reach your full velocity in the first two Sprints

Deduct 40% of the initial velocity of the first Sprint for both Scrum teams.

Deduct 20% of the initial velocity of the second Sprint for both Scrum teams.

1. When will your project be ready for the go-live ?

a) Refer to result below.

Figure 171: Case Study: Release Planning with two Scrum Teams

166

© Copyright. All rights reserved.

Lesson: Illustrating the Release Planning in a Scaled Environment

LESSON SUMMARY
You should now be able to:

● Plan Release in a Scaled Environment

© Copyright. All rights reserved.

167

Unit 4
Lesson 3

Designing Sprint Cycle

LESSON OBJECTIVES
After completing this lesson, you will be able to:

● Describe how to run Realize phase in iterations

●

Identify when we take a User Story into a Sprint and illustrate how we measure its 
completion

● Outline what is expected from team members during the Sprint

Story Map

Figure 172: Lessons within Titles (Story Map)

On our storyboard for the course, we now discuss the next level (Sprint Cycle) – equivalent to 
the next layer of product functionality.

168

© Copyright. All rights reserved.

Lesson: Designing Sprint Cycle

Figure 173: Sprint Cycle

 In this figure, you can see the three objectives of the second lesson as user stories.

Sprint Cycle

Figure 174: Agile Build: Iterative Realize Phase

In the figure, SAP Activate – Iterative Realize Phase, we can see how to apply the Sprint cycles 
to the Realize phase.

Note: There are different types of Sprint shown.

Sprint 0 is often needed for team and product initial setup activities that aren't producing new 
capabilities of a product that can be demonstrated at the end of the Sprint.

A firm-up Sprint is used for end-to-end testing and Product functionalities stabilization – 
scenario testing is performed and major issues are fixed. In this way, we ensure early 
discovery and fixing for the bugs and higher product quality.

In the SAP Activate methodology, the Realize phase ends with two special type Sprints: one 
for integration testing and another for final user acceptance testing.

© Copyright. All rights reserved.

169

Unit 4: Illustrating Iterative Build

Figure 175: Closer Look at a Sprint/Iteration

In this section, we'll look closer at the following and see how these activities are modified by 
the existence of multiple Scrum Teams that are working in parallel in a scaled environment:

1. Sprint Planning

2. Sprint Execution

3. Daily Team Meeting

4. Sprint Demo

5. Sprint Retrospective

Figure 176: 1. Define Sprint Goals During Sprint Planning Meeting

The Product Owner and the Development Team need to be aligned on the goals and scope of 
a Sprint.

170

© Copyright. All rights reserved.

Lesson: Designing Sprint Cycle

Figure 177: Example: Sprint Planning in SAP project

In this example, we see what needs to be done for each User Story, the dependencies, and the 
desired Ideal Hours to complete a User Story.

Note the different types of tasks involved in completing each User Story.

Figure 178: SAP Cloud ALM: Card View to Manage Project Tasks

SAP Cloud ALM offers a Card View to manage in a Scrum Board manner the project tasks, the 
User Stories, and advanced filtering capabilities that support the Agile Sprint Backlog 
visualization.

© Copyright. All rights reserved.

171

Unit 4: Illustrating Iterative Build

Figure 179: Project Progress Reporting and Burn Up Chart

In the figure, Project Reporting and Burn Up chart, we can see Agile reporting capabilities 
available in SAP Cloud ALM.

Figure 180: Identify All Tasks Required to Complete User Stories

When working on a physical Scrum Board, you'll see that each task has a sticky note with no 
more than four hours ideal time assigned per task.

We also recommend that you use different color pens or cards for each type of task.

172

© Copyright. All rights reserved.

Lesson: Designing Sprint Cycle

Figure 181: Sprint Planning Meeting Example

The figure, Sprint Planning Meeting Examples, shows a real example of a board used in Sprint 
Planning.

Figure 182: Commitment Is Based on Reality

Estimated hours are created using Ideal Hours. We won't always have ideal conditions, 
therefore, to be realistic, we need to consider that the sum of estimated hours should be 
between 50% and 70% of the available hours when we start running the Sprints. When the 
Sprint velocity is known, we can plan differently, but this is a good starting point for realistic 
planning.

© Copyright. All rights reserved.

173

Unit 4: Illustrating Iterative Build

Figure 183: Check Resource Availability in Sprint

Don't guess resource availability for planned work. Look at the true availability of resources.

The figure, Check Resource Availability in Sprint, gives you a simple example of resource 
availability checking.

Figure 184: 1. Define Sprint Goal During Sprint Planning Meeting in a Scaled Environment

In a scaled environment, when multiple teams are aligning to the same objectives, we must 
make sure that the team goals are coherent and are supporting the program level objectives 
for each Sprint.

Dependencies that are arising from this cooperation between teams must be identified and 
treated as 'integration points' that may affect the achievement of the Sprint goal if not 
properly managed.

Risks related to dependencies should be identified during the Sprint Planning and managed 
using the resolve, own, accept, mitigate (ROAM) process for risk management mentioned in 
an earlier lesson.

Release planning aims to identify and manage the dependencies between the Scrum Teams 
at the beginning of the Sprint Cycle.

174

© Copyright. All rights reserved.

Lesson: Designing Sprint Cycle

The planning is a continuous activity that must also occur after each Sprint so as to assess 
the feasibility of the Release plan with the actual Scrum Team capacity to deliver as per the 
plan.

Changes to the Release plan may need to be operated if one or more of the following reasons 
occur:

● New backlog items may be identified and prioritized against existing ones.

● Roadblocks can delay the realization of the backlog items and affect the initial schedule.

● Estimations can prove to be wrong, and so on.

Before every Sprint planning, in a scaled Agile environment, the Product Owners must:

● Reprioritize the Backlog items for their Scrum Teams.

● Review the actual remaining Backlog with the product ownership team and, if it's needed, 

raise the necessity of a Release replanning.

● Review the actual status of the dependency completion.

● Have a common definition at the program level for the targeted Sprint goals for the Scrum 

Teams.

Before every Sprint planning, in a scaled Agile environment, the Scrum Team must:

● Understand the integration risks and potential issues, and consider them when carving the 

Sprint Goal.

● Align the Sprint Goal at the Team level with the Sprint Goal at the program level.

Figure 185: 2. Sprint Execution (2–4 Weeks)

The scope of each Sprint is fixed. Never add new backlog items in the Sprint Backlog in the 
middle of the Sprint. These items can be added to the Product Backlog as result of Backlog 
Refinement meetings or, at the end of the Sprint, as a result of the Sprint Review meeting.

The team need to be sure of the definition of Done and have acceptance criteria defined for 
each User Story.

© Copyright. All rights reserved.

175

Unit 4: Illustrating Iterative Build

Figure 186: Example: Scrum Board After Sprint Planning Session

The Scrum Board is in place.

There are four user stories that each have multiple tasks.

Figure 187: Example: Scrum Board Day 3

User stories 1, 2, and 3 have one or more tasks In progress or completed with additional tasks 
to be completed. These three user stories are, therefore, classified as Active.

No tasks for User Story 4 have been set in progress or completed, so this User Story remains 
in the Sprint Backlog.

176

© Copyright. All rights reserved.

Lesson: Designing Sprint Cycle

Figure 188: Example: Scrum Board Day 6

All tasks associated with User Story 1 are seen as Completed. Therefore, the User Story 
moves from Active to Testing.

When working with User Story 3, some additional tasks were identified and are added (shown 
as orange cards above).

User Story 4 now has some task cards In Progress, so the User Story is now Active.

Figure 189: Example: Scrum Board Day 7

User Story 1 has some test defects. Bug fixing tasks have been created for the User Story, and 
the User Story returns to the Active status.

© Copyright. All rights reserved.

177

Unit 4: Illustrating Iterative Build

Figure 190: Example: Scrum Board Day 9

User Story 1 and User Story 2 have now been completed and are ready for test or retest. Both 
these user stories are now ready for testing or test progress.

Figure 191: Example: Scrum Board Day 10

User Story 1 has been retested without defects and moves to the Done status.

User Story 2 had associated defects so is now Active whilst processing the three defect 
resolution tasks.

178

© Copyright. All rights reserved.

Lesson: Designing Sprint Cycle

Figure 192: Example: Scrum Board Day End of Sprint

User Stories 1, 2, and 3 have completed retesting after completing defect resolution tasks. 
The User Stories are now shown as Done.

User Story 4 had identified two defect resolution tasks. These tasks are in progress so the 
User Story is seen as Active.

Figure 193: Sprint Backlog and Governance with SAP Cloud ALM

In the picture, Sprint Backlog and Governance with SAP Cloud ALM, we see the analytics 
capabilities of SAP Cloud ALM that, among others, are making the work status during the 
project Sprints transparent.

© Copyright. All rights reserved.

179

Unit 4: Illustrating Iterative Build

Figure 194: 3. Daily Stand-up Meeting

The figure, 3. Daily Stand-up Meeting, provides a summary of the Daily Stand-up Meeting. 
Some examples of obstacles that might be raised in the daily stand-up meeting are as follows:

● My laptop broke, and I need a new one today.

●

●

●

●

I still haven't gotten the software I ordered a month ago.

I need help debugging a problem with xyz.

I'm struggling to learn xyz and would like to pair with someone on it.

I can't get the vendor's tech support group to call me back.

● Our new contractor can't start because no one is here to sign her contract.

●

I can't get the x group to give me any time and I need to meet with them.

● The department VP has asked me to work on something else for a day or two.

In cases where the Scrum Master cannot remove these impediments directly (for example, 
usually the more technical issues), they still take responsibility for making sure someone on 
the team does quickly resolve the issue.

In a scaled environment, when multiple teams are working on the same Backlog, although the 
work allocation strategy aims to minimize the dependencies between the Scrum Teams, they 
can still manifest, during the Sprint cycle, as blockers. For example, one team is working on a 
technical object that's already in progress with another team or a prerequisite activity for one 
team is in the backlog of another team.

Such roadblocks are examples of impediments that can be raised during the daily stand-up.

180

© Copyright. All rights reserved.

Lesson: Designing Sprint Cycle

Figure 195: 4. Sprint Review (~4 hours)

In the Sprint Review, the focus is on what's been delivered during the Sprint, identification and 
prioritization of any new requirements, and an update or review of the Product Backlog.

Figure 196: 5. Sprint Retrospective Meeting (1–3 hours)

The figure, 5. Sprint Retrospective Meeting (1–3 hours), is all about the Sprint Retrospective. 
The purpose is to continuously improve the Scrum process using lessons learned from the 
Sprint execution.

© Copyright. All rights reserved.

181

Unit 4: Illustrating Iterative Build

Figure 197: 5. Retrospective

The figure, 5. Retrospective, shows some thoughts for structuring the meeting.

Figure 198: Retrospective Whiteboard with Dot Voting

As part of the Sprint Retrospective, you may use sticky notes to capture items under the 
following three headings:

● Keep doing: What went well

● Stop doing: What we want to avoid or change

● Start doing: What we want to improve

And then use red dots to vote or identify a collective view of the most important ones to 
action.

There are no bad ideas, just a collective prioritization.

The Sprint Retrospective activity isn't impacted by the scaled environment in the sense that it 
keeps the same internal team brainstorming meeting to identify the means and actions so 
that this team will improve its output. Some of the issues that could be the subject of the 
discussions and that would need improvement could come from collaboration and 
dependencies occurring as a natural consequence of working with multiple Scrum Teams in 
parallel.

182

© Copyright. All rights reserved.

Unit 4
Exercise 13

Case Study: Daily Stand Up

The Sprint teams are busy with the execution of the Sprints. On the Sprint Burndown Chart, 
the teams are slightly behind the trend line.

Mr. David Blitz, RAGAZZA’s Project Manager, is joining one of the daily stand-up meetings.

1. When one consultant is updating the remaining task hours on one of the sticky notes, Mr. 
Blitz becomes nervous. From his understanding, the estimates are too high and he's also 
questioning whether the estimate is correct during the daily stand-up.

2. You are the Scrum Master. How do you react in this situation?

© Copyright. All rights reserved.

183

Unit 4
Solution 13

Case Study: Daily Stand Up

The Sprint teams are busy with the execution of the Sprints. On the Sprint Burndown Chart, 
the teams are slightly behind the trend line.

Mr. David Blitz, RAGAZZA’s Project Manager, is joining one of the daily stand-up meetings.

1. When one consultant is updating the remaining task hours on one of the sticky notes, Mr. 
Blitz becomes nervous. From his understanding, the estimates are too high and he's also 
questioning whether the estimate is correct during the daily stand-up.

2. You are the Scrum Master. How do you react in this situation?

184

© Copyright. All rights reserved.

Lesson: Designing Sprint Cycle

LESSON SUMMARY
You should now be able to:

● Describe how to run Realize phase in iterations

●

Identify when we take a User Story into a Sprint and illustrate how we measure its 
completion

● Outline what is expected from team members during the Sprint

© Copyright. All rights reserved.

185

Unit 4: Illustrating Iterative Build

186

© Copyright. All rights reserved.

Unit 4
Lesson 4

Analyzing Testing and Deploy

LESSON OBJECTIVES
After completing this lesson, you will be able to:

●

Identify the test activities involved in an Agile project

● Understand how Agile Sprints may be used with Cutover tasks

● Discover how Agile Sprints may be used with Cutover tasks

Story Map

Figure 199: Lessons Within Titles (Story Map)

© Copyright. All rights reserved.

187

Unit 4: Illustrating Iterative Build

Figure 200: Testing and Deploy

Testing and Deploy

Figure 201: Test Strategy: Overview

Agile testing implies running tests frequently and as soon as possible in the development 
cycle. The cost of fixing an incident grows exponentially with the time that passed since the 
solution configuration activity was done or the code was written.

In an Agile project, the testing is part of the Sprint activities, and test results are checked 
before moving a User Story to Done status (see the Definition of Done lesson).

In the Prepare phase, the testing tools are set up, and the customer team is enabled to use 
the test management and the testing tools.

Test Strategy is finalized in the Explore phase, and the roles associated with testing must be 
staffed before the Realization phase begins. The recommendation is that testers are even 
participating in the Fit-to-Standard and solution design workshops so that they have an 
enhanced understanding of the solution and of the customers' needs.

The test strategy contains, among others, the thorough description of the Test Cycle, 
meaning the different phases of testing within the test execution:

● Unit Testing (if applicable)

● Business Process (String) Testing

188

© Copyright. All rights reserved.

Lesson: Analyzing Testing and Deploy

●

Integration Testing

● Data Conversion Testing

● Business / User Acceptance Testing

● Performance Testing

● Translation Testing (if applicable)

● Load Testing (different from Performance testing, if applicable).

Figure 202: Key Testing Activities in Activate Phases:

This figure represents an example of a Test Cycle with the explanation of possible test types 
and activities related to testing. We must differentiate between the final Business Acceptance 
Testing that is planned just before the end of the Realize phase and the User Acceptance 
Testing performed during the Sprints. The difference between the two types of acceptance is 
that for the final Business Acceptance, extensive, functional, end-to-end testing is performed 
on migrated business data to confirm the solution, the data, and the organization's go-live 
readiness.

Realize Phase: Sprint Cycle Testing Activities

Figure 203: Realize Phase: Sprint Cycle Testing Activities

© Copyright. All rights reserved.

189

Unit 4: Illustrating Iterative Build

Video: Describing the Sprint Cycle Testing Activities of Realize Phase

For more information on Describing the Sprint Cycle Testing Activities of Realize 
Phase, please view the video in the lesson Analyzing Testing and Deploy in your 
online course.

Regression Testing is part of Sprint Cycle Testing.

As additional configurations, hotfixes, or other changes may impact functionality that 
previously passed the String Test and User Acceptance Test, some repeated testing of these 
business processes should be planned as a part of the Sprint. These tests are still considered 
Unit, String, and Business Process Tests but may be classified as Regression Tests in the 
Manual Test Script Template, where the test result of the repeated test is tracked.

Defect Management

Monitoring the Test Execution is a crucial part of the testing activity. It's essential to consider 
the efforts spent on reporting Defects and retesting the defects reported in earlier Sprints.

Regression Testing is necessary after defect fixing to verify if the changes have impacted 
other functionalities in the same functional area.

Figure 204: Application Testing Activities (Example)

In this example overview of testing, we see different test activities associated with the project 
phases and different system environments.

We can see various levels of testing and the preparations for testing.

As we go into the Realize phase, we'll have the build Sprint and integrations Sprints that 
include the Unit Testing. Some String Tests may take place in the QA environment.

As we complete the solution build and integration developments, Integration testing will take 
place in the QA environment.

The Test Strategy will clearly identify when and where the project team executes data 
migration tests and performance tests. The Test Strategy should clearly identify the data, 

190

© Copyright. All rights reserved.

Lesson: Analyzing Testing and Deploy

systems, and environments to be used in each test stage and how the testing data / 
environment will be updated or recreated.

This Test Strategy is delivered in the Explore phase and reviewed by the functional and 
technical teams.

Figure 205: Remote Cutover Overview – Alignment to SAP Activate Phases

Cutover activities are planned and prepared from the Realize phase and executed in the 
Deploy phase.

Cutover plans are adjusted and fine-tuned as a result of the dry run or dress rehearsal go-live 
that is organized to identify possible planning or technical impediments that could endanger 
the actual go-live.

Before the go/no-go decision, all issues identified during the dress rehearsal are analyzed and 
fixed depending on their criticality and the risk level of the go-live is estimated and managed.

For the Run phase, standardized procedures that leverage the experience of the organization 
and the software supplier are a key prerequisite for the optimization of application 
management.

SAP supports customers, partners, and consultants with guidelines called SAP standards for 
solution operations. These standards are published on the SAP Service Marketplace.

With SAP standards for solution operations, SAP provides standards for key operations 
processes within a company's business and IT units.

These key standards and practices address the needs of business process experts who are 
responsible for the design and execution of business processes, and of IT departments, and 
who ensure that the services provided by the SAP solutions are available for business users.

Each standard contains best-practice procedures on how to run the individual tasks, 
explanations on which tools inside SAP Solution Manager should be used, and available 
training and services that support the adoption of the standard.

The implementation and optimization of these SAP Standards for solution operations are the 
key deliverables of the Run phase work packages.

© Copyright. All rights reserved.

191

Unit 4: Illustrating Iterative Build

Figure 206: Cloud ALM Example of Deployment Status for Features

The Feature Traceability app helps you to analyze the readiness of your features based on the 
progress of its related objects like user stories, project tasks, and assigned transports.

SAP Cloud ALM supports solution testing activities and provides a special view to with the 
status of realization for the features in the project scope. The result of the testing activities 
that were performed on each feature is reflected in its status.

In the User Story column, the number of the respective entity with its statuses that are 
created from or assigned to each listed feature are shown.

Release managers can review the readiness of features for an upcoming release by selecting a 
release in the filter. Then, by selecting the status Done for projects tasks and a User Story in 
the extended filters, they can identify if all the related tasks were completed.

In the Deployment Status column, you can check if transports assigned to a feature are 
already:

● Released in the development systems

●

●

Imported into the quality assurance systems

Imported into the production systems

Figure 207: Example: Working in Sprints During the Deploy Phase

Sprints can also be set up to help manage the multiple types of tasks that must be organized 
for a successful Deploy phase.

192

© Copyright. All rights reserved.

Lesson: Analyzing Testing and Deploy

These Sprints, most likely with a weekly duration, in which the cutover activities are planned 
along with testing, training, and OCM tasks, provide transparency on upcoming tasks and 
alignment between team members.

The daily synchronization between the team members with focus on impediment surfacing 
and their resolution is just one example of the benefits of continuing to run in Sprint Cycles 
beyond the Realize phase. The team has greater visibility and understanding on deploy 
activities, and solutions for removing obstacles are quickly identified. 

In SAP Cloud ALM, you can organize the testing and deployment activities, visualize them in a 
ScrumBoard, and work in Sprints with Scrum teams also in the Deploy phase.

LESSON SUMMARY
You should now be able to:

●

Identify the test activities involved in an Agile project

● Understand how Agile Sprints may be used with Cutover tasks

● Discover how Agile Sprints may be used with Cutover tasks

© Copyright. All rights reserved.

193

Unit 4: Illustrating Iterative Build

194

© Copyright. All rights reserved.

Unit 4

Learning Assessment

1. The Value-Driven approach puts the focus on the Project success.

Determine whether this statement is true or false.

X True

X False

2. Each team has their own estimated velocity that should not be extrapolated or compared 

to the velocity of the other teams.

Determine whether this statement is true or false.

X True

X False

3. Sprint Execution is the period during which the task-level work is performed by the 

development team to complete the features committed to during Sprint Planning.

Determine whether this statement is true or false.

X True

X False

4.

In which of the following project phases is it important to plan and schedule data loads 
followed by load validation activities?

Choose the correct answer.

X A Prepare.

X B Realize

X C Explore

X D Deploy

© Copyright. All rights reserved.

195

Unit 4: Learning Assessment

5.

In the System conversion to SAP S/4HANA Deploy phase, which of the following tasks are 
included?

Choose the correct answer.

X A Final testing

X B Hyper care support

X C Scheduling project plan

X D Interface setup

196

© Copyright. All rights reserved.

UNIT 5 Summarizing the Key Points

Lesson 1

Summarizing the Key Points

199

UNIT OBJECTIVES

● Summarize the SAP Agile project delivery approach

● Find additional material to follow up relating to Agile project delivery

© Copyright. All rights reserved.

197

Unit 5: Summarizing the Key Points

198

© Copyright. All rights reserved.

Unit 5
Lesson 1

Summarizing the Key Points

LESSON OBJECTIVES
After completing this lesson, you will be able to:

● Summarize the SAP Agile project delivery approach

● Find additional material to follow up relating to Agile project delivery

Story Map

Figure 208: Lessons Within Titles (Story Map)

© Copyright. All rights reserved.

199

Unit 5: Summarizing the Key Points

Summary and Key Points

Figure 209: Summary of Key Points and Takeaways

Figure 210: Summary of Key Points and Takeaways

Figure 211: Agile and Scrum

200

© Copyright. All rights reserved.

Lesson: Summarizing the Key Points

Additional Material to Follow Up

Recommended Reading for Scrum Coaches

Scrum basics (pick one, they are all are great resources):

● Essential SCRUM by Kenneth S. Rubin

● Agile Project Management with SCRUM by Ken Schwaber

●

Jeff Sutherland's SCRUM Book (free)

● Succeeding with Agile by Mike Cohn

Practical application of Scrum:

● Agile SAP by Sean Robson – e-book / physical book

● Lean from the trenches by Henrik Kniberg – physical book

● SCRUM and XP from the Trenches free download – e-book

Parting Thoughts

●

●

●

“True agility goes beyond the dogma, beyond the practices. Agility is about adapting; 
adapting your process, your language, your tools, your team, and yourself to respond to 
the situation at hand.” – Andy Hunt.

“You can’t do “agile” and make yourself better. You can only do things better and in the 
process become more agile.” – Dave Thomas.

“Scrum doesn’t solve problems, it uncovers them and puts them in our face. Then, through 
hard work we address them. ”– Mike Cohn.

LESSON SUMMARY
You should now be able to:

● Summarize the SAP Agile project delivery approach

● Find additional material to follow up relating to Agile project delivery

© Copyright. All rights reserved.

201

Unit 5: Summarizing the Key Points

202

© Copyright. All rights reserved.

Unit 5

Learning Assessment

1. Agile projects use iterative incremental build to focus team on finite number of priorities to 

address in each Sprint.

Determine whether this statement is true or false.

X True

X False

© Copyright. All rights reserved.

203

Unit 5: Learning Assessment

204

© Copyright. All rights reserved.

UNIT 6 Mentioning Supplementary 

Content

Lesson 1

Mentioning Supplementary Content

207

UNIT OBJECTIVES

● Mention further information regarding Agile at large, real-life cases, SAP Cloud ALM and 

on-premise Explore phase activities

© Copyright. All rights reserved.

205

Unit 6: Mentioning Supplementary Content

206

© Copyright. All rights reserved.

Unit 6
Lesson 1

Mentioning Supplementary Content

LESSON OBJECTIVES
After completing this lesson, you will be able to:

● Mention further information regarding Agile at large, real-life cases, SAP Cloud ALM and 

on-premise Explore phase activities

Agile Manifesto

Figure 212: Agile Manifesto – Twelve Principles

These are the 12 principles of the Agile Manifesto. They do come from Software Development, 
but they’re valid in any other environment too.

© Copyright. All rights reserved.

207

Unit 6: Mentioning Supplementary Content

Agile Use Cases

Figure 213: Customer Story: Regulated Utility Business in Europe

This picture shows some of the most frequent reasons that can lay the foundation of a strong 
business case for implementing SAP S/4HANA.

SAP Best Practices bring to customer organizations the process standardization that large 
companies are seeking after merging or after years of operations and customizations, so as to 
simplify and unify the business processes across all sites.

The Agile approach to address complex systems implementation is to 'slice the elephant' into 
smaller and manageable pieces, so that it can be released with controllable costs and risks.

Having multiple and smaller releases is the Agile approach in opposition with the big-bang 
approach that's very common in projects delivered with the traditional waterfall approach.

The selection of the business areas to be covered by the first release is the first step in 
deciding how to determine the scope for the releases. Other business areas will continue to 
work in parallel with the legacy system. Numerous elements must be considered, for example:

●

Interfaces with other systems in the landscape

● Data migration needs

● Business Data (Master and Transactional) that must be maintained and kept coherent in 

both new and legacy systems

● Operations activities

In this customer example, along the core business processes (Logistics, Warehousing, Plant 
Operations, and Plant Maintenance), the management support functions have been selected 
for the first release.

The example customer is a global company with more than 250 agencies worldwide. Only 12 
countries of the total amount will be impacted by the first release as these have many 
commonalities and only a few country-specific requirements.

Agencies from all the other countries will have their systems implemented in subsequent 
future releases.

208

© Copyright. All rights reserved.

Lesson: Mentioning Supplementary Content

Figure 214: Customer Story: Project Key Features

The key features that secured the project's success are (some of them are the same in 
traditional projects):

● Clear project vision and strategy

● Customer involvement

● SAP roles and SAP Solution Manager usage as a single source of truth for the solution 

documentation

● Quality gates, KPIs, and strong budget management.

The agility proven by the teams handling the configuration and custom code development 
brought extra speed and risk alleviation.

Testing executed during the Sprints, by Business Experts from the customer side who were 
participating in the project as Scrum team members, brought early solution acceptance by 
the business.

The discipline of the Agile teams that were driving the project provided the cadence for 
synchronization with the non-Agile teams and standardization in managing activities, risks, 
and impediments.

Sprint by Sprint the predictability of the new feature ready to be tested increased, which 
made the planning of other activities delivered by the non-Agile teams easier: integrations, 
infrastructure, training, migration, and so on.

The early acceptance of functionalities by the business, after the first couple of Sprints, 
motivated the Scrum to keep the pace.

Transparency brought by Focused Build and other Agile-specific information radiators for the 
Scrum Team progress and impediments proved its value to the management team who was 
able to take timely decisions about scope and budget.

The clear Design to Budget approach gave the Product Owners the power to decide how to 
split the available budget among all requirements, including changes in the area of their 
responsibility. POs define the new solution with their decisions within the given budget.

Besides the definition of specific points of contacts within the Scrum teams, the project has 
benefited from the frequent multilevel synchronization among Agile and non-Agile teams 
that's specific to Scrum:

© Copyright. All rights reserved.

209

Unit 6: Mentioning Supplementary Content

● Weekly SoS

● Weekly PO synchronization

● Sprint Planning

● Sprint Review

Figure 215: Customer Story: Project Timeline for Release 1

The project was delivered with Activate Methodology. The Foundation phase is an 
enhancement to the SAP Activate standard phases. It was designed to set the focus on the 
solution landscape provisioning and baseline configuration activities done by the SAP experts 
to prepare the solution for the Fit-to-Standard workshops.

All the other activities in the Explore phase related to workshop preparation covered the 
preparation of the organization: customer team enablement on Best Practices, on tools, and 
on the discipline of running the workshops.

The Product Backlog design was time boxed to one month and limited to the deltas for the 
first two Sprints. The design of the requirements continued throughout the Realization phase, 
as part of Sprints activities, in a just-in-time approach for the requirements identified as 
valuable for the upcoming Sprints.

The Explore strategy for the product backlog creation was to focus only on the global 
processes and requirements to build the common and standardized foundation for all the 12 
countries in the Release 1.

The project management team decided to organize the Sprints into Waves, each Wave being 
composed of three Sprints of three weeks plus a hardening, integration, and planning (HIP) 
Sprint. The HIP Sprint was used for end-to-end functional testing, integration testing, and 
planning for the next Wave.

Starting with the second Wave:

● Country-specific legal requirements have been identified and integrated into the Product 

Backlog.

● Data migration workstream provided customer-specific data for Wave testing in the 

quality systems.

210

© Copyright. All rights reserved.

Lesson: Mentioning Supplementary Content

In the Deployment phase, a special importance has been given to the business acceptance 
tests on migrated data to validate the correctness of the migrated data and the solution 
robustness.

Figure 216: Customer Story: Project Organization

The project organizational chart shows the hybrid Agile approach: business aligned teams 
were organized into Scrum teams, whereas the other activities delivered by the other SAP 
Activate workstreams were organized as traditionally-provided services for the Agile teams.

The Scrum teams were organized to deliver end-to-end processes in an attempt to minimize 
the team dependencies, for example:

● Order to cash

●

Invoice to Payment

● Request, Procure to Pay

In the Scrum teams, there were appointed representatives to the non-Agile teams. These 
points of contact (PoCs) were attending in the traditional teams' synchronization calls with 
the objective to clarify the requests coming from the Scrum teams. These PoCs were also 
participating to work, if necessary, in the traditional teams to facilitate the interactions 
between the teams.

So, the PoCs were the bridge between the two worlds, Agile and non-Agile, and were 
participating as team members in both types of teams.

As visible in the org chart, a special attention was given to Organizational Change 
Management activities. Two teams with specialized focus were created to ensure the solution 
adoption by the organization from day one after go-live.

In all teams, there was at least a double presence – customer and SAP. In some teams, also 
third-party experts with special skills, like analytics or data migration, were also involved.

For the Scrum Teams, the Product Owner always came from the Customer, and they were 
seconded by an SAP Lead, an expert in the SAP solution for the respective business area.

© Copyright. All rights reserved.

211

Unit 6: Mentioning Supplementary Content

In some teams, the PO came from the Business. In other situations, the PO came from the 
Customer IT department but had a deep knowledge of the business needs and synchronized 
often with Key Users and Business Stakeholders.

Also from the Customer organization, the Product Owners were coordinated by an Area 
Product Owner called Workstream Lead in this organization chart. There were two such Area 
Product Owners: one for Management Support Functions and another one for Core Business.

Their role was more on coordination among POs and also on budget management at the area 
level.

Figure 217: Customer Story: Details of Agile Adoption

Figure 218: Customer Story: High Adoption of Agile Roles

212

© Copyright. All rights reserved.

Lesson: Mentioning Supplementary Content

Figure 219: Customer Story: Scrum Teams Organization Principles

Figure 220: Customer Story: Quality Gates Implementation and Follow Up

Agile Fit Questions

Figure 221: Determine Project Methodology – Agile Fit Questions

© Copyright. All rights reserved.

213

Unit 6: Mentioning Supplementary Content

Figure 222: Overall Project Fit

Figure 223: Organizational Fit

Figure 224: Project Manager Fit

214

© Copyright. All rights reserved.

Lesson: Mentioning Supplementary Content

Figure 225: Project Stakeholder Fit

Figure 226: Project Team Fit

Agile and SAP Cloud ALM

Figure 227: SAP Cloud ALM

SAP Cloud ALM aids in the implementation and operation of intelligent cloud-based and 
hybrid business solutions. You can benefit from a ready-to-use, native cloud solution that's 

© Copyright. All rights reserved.

215

Unit 6: Mentioning Supplementary Content

designed to serve as the central entry point for managing your SAP landscape. This solution 
offers content-driven guided implementation and highly automated operations.

SAP Cloud ALM is included in:

● Cloud subscription containing Enterprise Support

● Cloud edition

● SAP Enterprise Support

SAP Cloud ALM supports the complete application lifecycle from design, build, test, and 
deploy. Also monitoring capabilities and applications supporting the operation of SAP 
solutions are included. The provided capabilities are all built-in, preconfigured, and ready-to-
use.

New capabilities are added constantly and delivered biweekly to the customer tenants – see 
SAP Road Map Explorer.

SAP Cloud ALM manages not only cloud but also hybrid (combination of on-premise and 
cloud) solutions.

Figure 228: SAP Cloud ALM for Implementation – Customer Benefits

SAP Cloud ALM provides support in configuring and managing projects with SAP Activate on 
a broad list of roadmaps (for example, SAP S/4HANA Cloud, public edition implementation 
and upgrade, SAP S/4HANA Cloud, private edition implementation, system conversion, SAP 
Ariba and SAP Fieldglass implementation, SAP Success factors implementation, Intelligent 
Enterprise implementation, and so on).

For further information, check the Help Portal link: https://help.sap.com/docs/cloud-alm/
applicationhelp/consuming-tasks-from-sap-activate.

216

© Copyright. All rights reserved.

Lesson: Mentioning Supplementary Content

Figure 229: End-to-End Process in SAP Cloud ALM for Implementation

This end-to-end process flow provides the key activities for each project role during the whole 
project lifecycle.

You can select each activity to open the how-to demo for detailed guidance.

As visible in the figure, SAP Cloud ALM supports Agile Sprints from the Explore phase down to 
the Deploy phase in SAP Activate Methodology.

SAP Cloud ALM provides a Process Hierarchy application to manage the processes for the 
solution. For each solution process in SAP Cloud ALM, you can have associated 
Requirements, User Stories, Project Tasks, and Test Cases.

The Requirement concept in SAP Cloud ALM corresponds to a large functionality to be 
implemented or an Epic from the Agile vocabulary. A Requirement has multiple Features 
(transport bundles) associated with it, and a Feature can contain multiple User Stories.

Requirements are expectations that must be fulfilled from a business point of view. They 
represent business needs from a customer perspective.

In SAP Cloud ALM, you collect all requirements resulting from the Fit-to-Standard workshops. 
Each requirement is linked to the respective process. It enables the members of the 
implementation project to track the progress of each requirement from different angles, for 
example, from task, development, and test perspective.

For a requirement, create the following:

● A user story for the development team, to be assigned to sprints and to the responsible 

team.

● A feature to define how and when the requirement is deployed to a QA or production 

system, for example.

● Sub-tasks in the user story, to be assigned to individual team members.

● Additional project tasks, for example, if someone must take care of training activities or an 

authorization concept.

The Feature concept in SAP Cloud ALM is created as a collection of Transports that contain 
the changes produced as a result of User Stories implementation.

© Copyright. All rights reserved.

217

Unit 6: Mentioning Supplementary Content

A User Story in SAP Cloud ALM describes a small functionality that can be finished within one 
Sprint.

Links to the ALM SAP Help Portal for Project Leads:

● Setup Project – Projects and Setup | SAP Help Portal

● Onboarding Team Members – https://help.sap.com/docs/cloud-alm/applicationhelp/

maintaining-users

● Plan Releases and Timeboxes – https://help.sap.com/docs/cloud-alm/applicationhelp/

project-planning-timeboxes

● Manage and Execute Project Tasks – https://help.sap.com/docs/cloud-alm/

applicationhelp/task-management

SAP Cloud ALM Support for Business Process Experts activities:

● Select Process Scope – https://help.sap.com/docs/cloud-alm/applicationhelp/manage-

scopes

● Collect and Document Requirements – https://help.sap.com/docs/cloud-alm/

applicationhelp/creating-requirements

● Approve Requirements – https://help.sap.com/docs/cloud-alm/applicationhelp/

approving-requirements

SAP Cloud ALM Support for Change and Deployment Lead activities:

● Create Features – https://help.sap.com/docs/cloud-alm/applicationhelp/creating-

features

● Create/Assign Transports – https://help.sap.com/docs/cloud-alm/applicationhelp/

creating-transports

● Deployment to QAS – https://help.sap.com/docs/cloud-alm/applicationhelp/deploying-

transports-of-feature

● Deployment to PRD – https://help.sap.com/docs/cloud-alm/applicationhelp/

deployment-confirmation

SAP Cloud ALM Support for Configuration Expert/Consulting Expert activities:

Create/Plan User Stories for Developments – https://help.sap.com/docs/cloud-alm/
applicationhelp/agile-support

SAP Cloud ALM Support for Test Lead and Testing Expert activities:

● Create Test Cases – https://help.sap.com/docs/cloud-alm/applicationhelp/test-

preparation

● Manage Test Plan and Assign Testers – https://help.sap.com/docs/cloud-alm/

applicationhelp/test-plans

● Execute Test Cases – https://help.sap.com/docs/cloud-alm/applicationhelp/test-

execution

● Process Defects – https://help.sap.com/docs/cloud-alm/applicationhelp/defects

218

© Copyright. All rights reserved.

Lesson: Mentioning Supplementary Content

Figure 230: Consume Tasks from Activate

The task content for your project follows the hierarchy provided by SAP Activate.

To automatically derive the tasks from the SAP Activate methodology, select the product-
related task roadmap when you create your implementation project. This ensures that your 
team is using the correct roadmap for the implementation of your cloud product.

The content from the SAP Activate methodology gets the source attribute SAP Activate 
Roadmap, so you can easily distinguish it from manually created tasks and tasks generated 
from requirements.

The SAP Activate content is updated regularly, in both Roadmap Viewer and SAP Cloud ALM. 
You can track the changes in the history of the Projects and Setup app.

Figure 231: Project Tracking in Analytics

Project Progress Reporting application in SAP Cloud ALM shows the progress in terms of task 
completion for phases, sprints, and deliverables.

You can filter the report for scope, tasks types, priorities, teams, and user types.

The report outlines all planned tasks, completed tasks, and remaining tasks, as well as the 
distribution with regard to phases.

© Copyright. All rights reserved.

219

Unit 6: Mentioning Supplementary Content

Figure 232: Consume SAP Best Practice Processes in SAP Cloud ALM

SAP Cloud ALM serves as a central platform for you to access business process content 
that's provided by SAP and partners. In addition, you can create your own process structures.

During scoping, you add the solution scenarios that define the project process scope.

In the SAP Cloud ALM Processes app, you can manage the scope of your solution processes 
and create your own process structures.

The standard business process content is the foundation of your projects. It defines and 
organizes the relation between project tasks and business areas.

In the Process Authoring app, you can create and maintain any custom solution process.

Apart from creating a diagram from scratch, you can create a diagram from an existing SVG 
or BPMN file.

Figure 233: SAP Cloud ALM – Capture Requirements

Manually create requirements for the entire process or individual elements of the process.

220

© Copyright. All rights reserved.

Lesson: Mentioning Supplementary Content

In the Processes app, you can create a requirement for a whole process or for individual 
elements like a lane, process step, or connector.

You can perform mass uploads for requirements. If a requirement has children or 
dependencies, this hierarchy is also included in the upload.

Figure 234: SAP Cloud ALM – Approve Requirement and Break Down Into User Stories

When a requirement has been completed and approved, you can use it to generate user 
stories and tasks for development and testing.

In the Analytics app, you can use the Solution Process Traceability for in-depth reporting. 
Here, you can analyze the readiness of your scoped solution processes based on the progress 
of the related requirements and tests.

For each solution process, you can check the status and numbers of requirements, user 
stories, project tasks, and test cases. There are extended filters for related objects like 
requirements, user stories, project tasks, test preparations, and test executions.

Figure 235: SAP Cloud ALM – Document Management

Use the Documents app to create, edit, and delete documents.

© Copyright. All rights reserved.

221

Unit 6: Mentioning Supplementary Content

You can add a document text, such as a description of steps for a configuration, and further 
information like a reference to an external source.

The status is set to In Progress by default. However, this can be changed at any time. There 
are three statuses for documents:

●

●

In Progress: Used for documents that are still being worked on

In Review: Used for documents that are still to be reviewed and that aren't yet ready to be 
released

● Released: Used for documents that are completed

To manage external documents that are stored outside of SAP Cloud ALM, 
the References function is introduced. External documents can be referenced in 
the Documents app by linking via URL.

Figure 236: SAP Cloud ALM – Releases and Timelines Application

To each project, in SAP Cloud ALM, you can assign one deployment plan. It helps 
the release manager to drive a deployment schedule to production.

A deployment plan serves as a container for Releases: One deployment plan can include 
several releases.

222

© Copyright. All rights reserved.

Lesson: Mentioning Supplementary Content

Figure 237: SAP Cloud ALM – Manual Test Case Preparation

The Test Preparation app in SAP Cloud ALM is where you prepare your test cases before they 
can be executed.

Figure 238: SAP Cloud ALM – Create Test Plans

Test plans are sets of test cases that are executed in specific test cycles, helping you run your 
testing activities in iterations.

While you can also carry out your testing activities without test plans for a leaner approach, in 
larger implementation and transformation projects, it might be necessary to reuse the same 
or a similar set of test cases in multiple test phases. This way, each test case occurrence can 
be executed within the defined time frame and receives a dedicated execution context.

© Copyright. All rights reserved.

223

Unit 6: Mentioning Supplementary Content

Figure 239: SAP Cloud ALM – Execute Test Cases and Record Results

In the SAP Cloud ALM Test Execution app, you can execute the test cases that have been 
prepared in the Test Preparation app.

As a testing expert, you can monitor the progress and the outcomes both of manual test runs 
executed in SAP Cloud ALM, and of automated test runs executed in the connected test 
automation tool.

Figure 240: SAP Cloud ALM – Defect Management

If you discover a deficiency during a test run, you can enter a defect directly from the Test 
Execution app.

In the Defects app, you can find more detailed information about the defects in your project.

By default, the list shows only open defects. To also see closed defects, add 
the Closed attribute to the Defect Status in the filter bar.

224

© Copyright. All rights reserved.

Lesson: Mentioning Supplementary Content

Figure 241: SAP Cloud ALM – Testing Analytics

Figure 242: SAP Cloud ALM – Selection of Release to Production and Confirmation of Requirements

Track the readiness of requirements for your projects based on the status of related project 
tasks, user stories, and test cases.

In the Analytics app of SAP Cloud ALM, you can track the contents of each requirement.

© Copyright. All rights reserved.

225

Unit 6: Mentioning Supplementary Content

Figure 243: SAP Cloud ALM – Where Can I Learn More?

If you would like to learn more about SAP Cloud ALM, please see:

High-Level Product Information

● SAP Cloud ALM overview: https://support.sap.com/en/alm/sap-cloud-alm.html

● SAP Cloud ALM for Implementation: https://support.sap.com/en/alm/sap-cloud-alm/

implementation.html

Please navigate to the Overview page for further details.

Backlog

Figure 244: Iterative Baseline Build – Build Baseline System for Solution Validation Workshops

There's a set of input elements that are required for a successful Fit-to-Standard workshop 
that's validating the fitness of the business processes that are available in the solution 
standard as SAP Best Practices.

226

© Copyright. All rights reserved.

Lesson: Mentioning Supplementary Content

In the Discovery phase, the business areas to be covered by the solution are identified, and 
corresponding SAP Best Practices are selected. This selection along with the engagement 
proposal and statement of work that will be attached to the solution implementation contract.

In this same phase, the Customer must make sure that value drivers for the organization are 
identified as part of the value case and that success measures are established, for example, 
customer satisfaction index, number of complaints, cost-to-serve, capital employed, revenue 
per customer, and so on.

Based on these success measures, processes in scope will have business value associated, so 
that we can organize and prioritize the most valuable business processes in the workshops. 
That's why the process determination value is an important input for the Fit-to-Standard 
workshop.

To be able to show the Best Practices processes, these must be activated in the sandbox or 
demo landscape that is used for the show and tell in the workshops.

The standard and most important outcome from the Fit-to-Standard workshops is, besides 
the Product Backlog, the validation of the solution fit. Issues might be identified while 
configuring the baseline solution to prepare it for the workshops. Any standard software 
defects must also be collected and raised to the product team to be managed before the go-
live through SAP Support.

User Authorization related requirements must be identified and collected as Product Backlog 
items and the Authorization Concept document is being drafted.

Although the responsibility for the quality of the Fit-to-Standard workshops' outcomes is 
shared between SAP and the Customer, specific roles, like Solution Architect and Project 
Manager, are playing more important parts in this process.

Figure 245: Checkpoints During Iterative Baseline Build – Check Progress of Baseline Build

A truly Agile Explore phase is run in Sprints, with the Agile Team members onboarded and 
Product Owner and Scrum Master staffed and effective in their roles.

Baseline Build is the name under which we can group all the activities necessary to prepare 
the standard SAP solution for Fit-to-Standard workshops.

Sprints in Explore are recommended to be shorter, as a rule of thumb – two weeks.

© Copyright. All rights reserved.

227

Unit 6: Mentioning Supplementary Content

Figure 246: Solution Validation Workshops – Validate Baseline Build Solution, Identify Requirements

As a final outcome for the Explore workshops, we'll have a Baseline Solution with its 
corresponding high-level process documentation that contains the validated Best Practices 
for the scope and a Product Backlog that contains the additional business requirements for 
the solution, ranked by their value.

This Product Backlog is created with the Customer leadership. The Product Owners who rank 
the backlog belong to the Customer organization, and, therefore, the Product Backlog is 
endorsed by the Customer.

In some situations, backlog approval is required by a decisional body created for this purpose 
in the Prepare phase of the project.

The fact that the Product Backlog gets approved doesn't mean that it stays unchanged until 
the end of the project. It's just establishing the initial baseline for the scope of work that was 
identified necessary as a result of the Explore phase workshops.

During the Realize phase, new requirements will typically be identified. If their value is higher 
than the value of the remaining and unfinished product backlog items, changes in the Product 
Backlog will be made to maximize the value delivery as per the change procedure agreed in 
the Prepare phase.

LESSON SUMMARY
You should now be able to:

● Mention further information regarding Agile at large, real-life cases, SAP Cloud ALM and 

on-premise Explore phase activities

228

© Copyright. All rights reserved.

Unit 6

Learning Assessment

1. The Solution Validation Workshops validate the baseline build from which we can identify 

delta requirements and gaps for the Backlog and create the agreed process 
documentation for the Explore phase.

Determine whether this statement is true or false.

X True

X False

© Copyright. All rights reserved.

229

